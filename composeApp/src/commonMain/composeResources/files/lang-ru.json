[
  {
    "logo": "kotlin",
    "name": "Kotlin",
    "url": "https://kotlinlang.org/",
    "description": "<bold>Kotlin</bold> — это современный язык программирования общего назначения с поддержкой статической типизации, разработанный компанией JetBrains. Он совместим с Java и ориентирован на разработку приложений для платформы Java Virtual Machine (JVM), Android, а также для веба и нативных платформ.",
    "history": {
      "nameOrigin": "Kotlin назван в честь острова Котлин, расположенного рядом с Санкт-Петербургом, где находится один из офисов JetBrains. Это следовало традиции, согласно которой языки программирования называются в честь географических мест (например, Java).",
      "developmentStart": "Начало разработки Kotlin датируется 2010 годом. Основная цель JetBrains заключалась в создании языка, который был бы полностью совместим с Java, но избавлялся от недостатков Java, таких как многословность, сложность работы с `null`, и предлагал более современные средства разработки.",
      "firstRelease": "Первая стабильная версия языка Kotlin, версия 1.0, была выпущена в феврале 2016 года. Это ознаменовало готовность языка для использования в реальных проектах. Позже, в 2017 году, Google официально объявил Kotlin языком для разработки Android-приложений, что значительно ускорило его распространение."
    },
    "code": "<rkey>fun</rkey> <rfunc>main</rfunc>() {\n    <rfunc>println</rfunc>(<rstr>\"Hello, World!\"</rstr>)\n}",
    "developmentStartYear": "2011",
    "firstVersionYear": "2016",
    "creators": [
      "JetBrains"
    ],
    "designStyle": "Kotlin разработан с акцентом на лаконичность и читаемость кода. Он использует минималистичный синтаксис, благодаря чему разработчики могут писать меньше кода для достижения тех же целей. Например, с помощью лямбда-выражений, data-классов и расширений функций код становится более выразительным и коротким по сравнению с Java.",
    "fileExtensions": {
      ".kt": "Основное расширение файлов исходного кода Kotlin.",
      ".kts": "Используется для скриптов на Kotlin, которые могут выполняться как самостоятельные программы.",
      ".kexe": "Файлы исполняемых программ для платформы Kotlin/Native.",
      ".klib": "Библиотеки для Kotlin/Native."
    },
    "paradigms": {
      "paradigms": [
        13,
        14,
        6,
        9,
        2,
        5,
        7,
        17,
        15
      ]
    },
    "typing": "Статическая, Сильная",
    "useCases": [
      "Мобильная разработка",
      "Серверная разработка",
      "Веб-разработка",
      "Кроссплатформенная разработка"
    ],
    "compatibility": [
      "JVM",
      "Android",
      "JavaScript",
      "Native",
      "iOS",
      "macOS",
      "Windows",
      "Linux"
    ],
    "popularFrameworks": [
      "Ktor",
      "Compose Multiplatform UI",
      "Spring",
      "Exposed",
      "TornadoFX"
    ],
    "features": [
      "Безопасность null-значений",
      "Корутины",
      "Совместимость с Java",
      "Kotlin Multiplatform",
      "Лямбда-выражения",
      "Интероперабельность с Java-кодом"
    ],
    "prosAndCons": {
      "pros": [
        "Полная совместимость с Java",
        "Лаконичный и выразительный синтаксис",
        "Сильная поддержка сообщества",
        "Корутины для асинхронного программирования",
        "Kotlin Multiplatform для кроссплатформенной разработки"
      ],
      "cons": [
        "Медленная компиляция на крупных проектах",
        "Ограниченная совместимость с устаревшими Java-библиотеками",
        "Молодая экосистема по сравнению с Java"
      ]
    },
    "relatedLanguages": [
      "java",
      "scala",
      "groovy",
      "swift"
    ],
    "ideSupport": [
      "IntelliJ IDEA",
      "Android Studio",
      "Eclipse",
      "VSCode",
      "NetBeans"
    ],


    "community": {
      "Kotlin Slack": "официальное сообщество для обмена опытом и обсуждения проблем.",
      "StackOverflow": "один из основных ресурсов для поиска ответов по проблемам с Kotlin.",
      "Reddit": "дискуссионная платформа с активными обсуждениями Kotlin.",
      "KotlinConf": "ежегодная конференция, посвященная Kotlin, организуемая JetBrains.",
      "Google I/O": "конференция, где часто анонсируются новинки Kotlin для Android-разработчиков."
    },
    "future": "JetBrains активно развивает Kotlin в направлении кроссплатформенной разработки. Ожидаются улучшения в производительности компилятора и расширение функциональности для кроссплатформенных решений, таких как Kotlin Multiplatform Mobile (KMM). Также усиливается поддержка нативных платформ, включая Windows и macOS."
  },
  {
    "logo": "rust",
    "name": "Rust",
    "url": "https://www.rust-lang.org",
    "description": "<bold>Rust</bold> — это современный системный язык программирования с открытым исходным кодом, разработанный для обеспечения высокой производительности и безопасности, особенно при работе с параллелизмом. Он предназначен для замены языков C и C++ в тех областях, где безопасность памяти и многопоточность имеют критическое значение.",
    "history": {
      "nameOrigin": "Название 'Rust' происходит от названия вида грибов (ржавчина), что отражает идею роста и распространения. Также оно может ассоциироваться с ржавчиной как процессом, который со временем разрушает металл, намекая на замену старых технологий новыми.",
      "developmentStart": "Разработка Rust началась в 2006 году Греем Хоаре как личный проект, а в 2009 году Mozilla начала спонсировать его развитие. Целью было создание языка, который бы предлагал высокую производительность C и C++, но с дополнительными гарантиями безопасности.",
      "firstRelease": "Первая стабильная версия Rust 1.0 была выпущена в мае 2015 года. Этот релиз обозначил готовность языка для промышленного использования и привлек внимание разработчиков по всему миру."
    },
    "code": "<rkey>fn</rkey> <rfunc>main</rfunc>() {\n    <rfunc>println!</rfunc>(<rstr>\"Hello, World!\"</rstr>);\n}",
    "developmentStartYear": "2006",
    "firstVersionYear": "2015",
    "creators": [
      "Грейдон Хоаре",
      "Mozilla"
    ],
    "designStyle": "Rust спроектирован для обеспечения безопасности памяти без использования сборщика мусора. Он использует концепции заимствований и владения для управления памятью, что позволяет избежать многих распространенных ошибок программирования, связанных с памятью и многопоточностью.",
    "fileExtensions": {
      ".rs": "Основное расширение файлов исходного кода Rust.",
      ".rlib": "Бинарные файлы библиотек Rust."
    },
    "paradigms": {
      "paradigms": [
        16,
        13,
        9,
        14,
        7
      ]
    },
    "typing": "Статическая, Сильная, Вывод типов",
    "useCases": [
      "Системное программирование",
      "Веб-разработка (серверная часть)",
      "Встроенные системы",
      "Разработка компиляторов",
      "Многопоточные приложения"
    ],
    "compatibility": [
      "Windows",
      "macOS",
      "Linux",
      "WebAssembly"
    ],
    "popularFrameworks": [
      "Rocket",
      "Actix",
      "Tokio",
      "Diesel",
      "Yew"
    ],
    "features": [
      "Безопасность памяти без сборщика мусора",
      "Система владения и заимствования",
      "Вывод типов",
      "Высокая производительность",
      "Параллелизм и многопоточность"
    ],
    "prosAndCons": {
      "pros": [
        "Безопасность памяти и потоков на уровне компиляции",
        "Высокая производительность, сопоставимая с C/C++",
        "Активное сообщество и растущая экосистема",
        "Отличная документация и инструментарий"
      ],
      "cons": [
        "Крутая кривая обучения",
        "Медленное время компиляции на больших проектах",
        "Меньшая экосистема по сравнению с более зрелыми языками"
      ]
    },
    "relatedLanguages": [
      "c",
      "c++",
      "go",
      "swift"
    ],
    "ideSupport": [
      "Visual Studio Code",
      "IntelliJ IDEA",
      "CLion",
      "Atom",
      "Sublime Text"
    ],
    "community": {
      "Rust Forum": "официальный форум для обсуждения языка и экосистемы.",
      "Rust Reddit": "активное сообщество на Reddit для новостей и обсуждений.",
      "StackOverflow": "основной ресурс для решения проблем и ответов на вопросы по Rust.",
      "RustConf": "ежегодная конференция, посвященная Rust и его экосистеме."
    },
    "future": "Rust продолжает набирать популярность, особенно в областях системного программирования и безопасности. С ростом интереса к WebAssembly и встраиваемым системам ожидается, что Rust будет играть ключевую роль в этих сферах. Улучшения в инструментарии и экосистеме будут способствовать более широкому принятию языка."
  },
  {
    "logo": "cpp",
    "name": "C++",
    "url": "https://isocpp.org",
    "description": "<bold>C++</bold> — это высокопроизводительный язык программирования общего назначения, поддерживающий множество парадигм, включая процедурное, объектно-ориентированное и обобщённое программирование. Он является расширением языка C и широко используется для разработки системного и прикладного программного обеспечения, драйверов, клиент-серверных приложений и встроенного ПО.",
    "history": {
      "nameOrigin": "Название 'C++' было предложено Риком Масситти в 1983 году как игра слов, основанная на операторе инкремента '++' в C, что подразумевает, что C++ является улучшенной версией C.",
      "developmentStart": "Разработка C++ началась в 1979 году Бьёрном Страуструпом в Bell Labs. Он стремился добавить объектно-ориентированные возможности в язык C, сохраняя при этом его эффективность и гибкость.",
      "firstRelease": "Первая коммерческая реализация C++ появилась в 1985 году. С тех пор язык постоянно развивается, и последние стандарты, такие как C++11, C++14, C++17 и C++20, добавили множество новых возможностей."
    },
    "code": "<rkey>#include</rkey> <rstr><iostream></rstr>\n\n<rkey>int</rkey> <rfunc>main</rfunc>() {\n    <rfunc>std::cout</rfunc> << <rstr>\"Hello, World!\"</rstr> << <rstr>'\\n'</rstr>;\n    <rkey>return</rkey> 0;\n}",
    "developmentStartYear": "1979",
    "firstVersionYear": "1985",
    "creators": [
      "Бьёрн Страуструп"
    ],
    "designStyle": "C++ сочетает в себе эффективность и низкоуровневый контроль, характерный для C, с возможностями высокого уровня для абстракции данных и объектно-ориентированного программирования. Он поддерживает множество парадигм и предоставляет богатый набор инструментов для разработки сложных приложений.",
    "fileExtensions": {
      ".cpp": "Основное расширение файлов исходного кода C++.",
      ".hpp": "Заголовочные файлы C++.",
      ".cc": "Альтернативное расширение для файлов исходного кода.",
      ".h": "Заголовочные файлы, общие для C и C++."
    },
    "paradigms": {
      "paradigms": [
        16,
        13,
        14,
        7,
        9,
        11
      ]
    },
    "typing": "Статическая, Номинальная, Вывод типов",
    "useCases": [
      "Системное программирование",
      "Игровая индустрия",
      "Встроенные системы",
      "Разработка приложений с высокой производительностью",
      "Графические приложения"
    ],
    "compatibility": [
      "Windows",
      "macOS",
      "Linux",
      "Unix",
      "Встроенные платформы"
    ],
    "popularFrameworks": [
      "Qt",
      "Boost",
      "STL",
      "Unreal Engine",
      "OpenCV"
    ],
    "features": [
      "Высокая производительность и контроль над ресурсами",
      "Объектно-ориентированное программирование",
      "Шаблоны и обобщённое программирование",
      "Прямая работа с памятью",
      "Поддержка множества парадигм"
    ],
    "prosAndCons": {
      "pros": [
        "Высокая производительность",
        "Гибкость и мощность языка",
        "Широкая база кода и библиотек",
        "Контроль над аппаратными ресурсами"
      ],
      "cons": [
        "Сложность языка и крутая кривая обучения",
        "Потенциальные проблемы с безопасностью памяти",
        "Длительное время компиляции",
        "Отсутствие единого стандарта для сборки и управления пакетами"
      ]
    },
    "relatedLanguages": [
      "c",
      "java",
      "c#",
      "rust"
    ],
    "ideSupport": [
      "Visual Studio",
      "CLion",
      "Eclipse",
      "Qt Creator",
      "Xcode"
    ],
    "community": {
      "ISO C++ Committee": "организация, ответственная за стандартизацию языка.",
      "C++ Reddit": "активное сообщество на Reddit для обсуждения языка.",
      "StackOverflow": "ключевой ресурс для решений проблем и вопросов по C++.",
      "CppCon": "ежегодная конференция, посвященная C++."
    },
    "future": "C++ продолжает эволюционировать с новыми стандартами, такими как C++20 и предстоящим C++23, которые добавляют новые возможности и улучшают существующие. Язык остается одним из основных в областях, требующих высокой производительности, и продолжит использоваться в системном программировании, игровой индустрии и встраиваемых системах."
  },
  {
    "logo": "python",
    "name": "Python",
    "url": "https://www.python.org",
    "description": "<bold>Python</bold> — это высокоуровневый язык программирования общего назначения с динамической типизацией, известный своей простотой и читаемостью синтаксиса. Он поддерживает несколько парадигм программирования и широко используется в веб-разработке, науке о данных, автоматизации, искусственном интеллекте и многих других областях.",
    "history": {
      "nameOrigin": "Название 'Python' было выбрано Гвидо ван Россумом в честь британской комедийной группы 'Monty Python', а не в честь змеи, как многие предполагают.",
      "developmentStart": "Разработка Python началась в конце 1980-х годов, а первая версия была выпущена в 1991 году. Гвидо ван Россум создал Python как наследника языка ABC, стремясь создать язык с простым синтаксисом и мощными возможностями.",
      "firstRelease": "Первая публичная версия Python 0.9.0 была выпущена в 1991 году. С тех пор язык активно развивается, и текущие версии Python 3.x продолжают расширять функциональность и производительность языка."
    },
    "code": "<rkey>def</rkey> <rfunc>main</rfunc>():\n    <rfunc>print</rfunc>(<rstr>\"Hello, World!\"</rstr>)\n\n<rkey>if</rkey> __name__ == <rstr>'__main__'</rstr>:\n    <rfunc>main</rfunc>()",
    "developmentStartYear": "1989",
    "firstVersionYear": "1991",
    "creators": [
      "Гвидо ван Россум"
    ],
    "designStyle": "Python разработан с акцентом на читаемость и краткость кода. Он использует отступы для определения блоков кода, что способствует структурированному и понятному написанию программ. Python стремится к простоте и легкости использования, предоставляя при этом мощные библиотеки и инструменты.",
    "fileExtensions": {
      ".py": "Основное расширение файлов исходного кода Python.",
      ".pyc": "Скомпилированные байт-код файлы Python.",
      ".pyd": "Динамические модули Python для Windows.",
      ".pyw": "Скрипты Python для Windows без консольного окна."
    },
    "paradigms": {
      "paradigms": [
        6,
        9,
        14,
        5,
        7,
        13,
        18,
        8
      ]
    },
    "typing": "Динамическая, Уткиная типизация",
    "useCases": [
      "Веб-разработка",
      "Наука о данных и машинное обучение",
      "Автоматизация и скрипты",
      "Обработка естественного языка",
      "Образование"
    ],
    "compatibility": [
      "Windows",
      "macOS",
      "Linux",
      "Unix",
      "Встроенные системы (через MicroPython)"
    ],
    "popularFrameworks": [
      "Django",
      "Flask",
      "TensorFlow",
      "PyTorch",
      "Pandas"
    ],
    "features": [
      "Простота и читаемость синтаксиса",
      "Большая стандартная библиотека",
      "Динамическая типизация",
      "Интерпретируемый язык",
      "Кроссплатформенность"
    ],
    "prosAndCons": {
      "pros": [
        "Легкость изучения и использования",
        "Большое сообщество и экосистема",
        "Богатый набор библиотек и фреймворков",
        "Кроссплатформенная совместимость"
      ],
      "cons": [
        "Низкая скорость выполнения по сравнению с компилируемыми языками",
        "Динамическая типизация может привести к ошибкам в рантайме",
        "Не подходит для мобильной и встроенной разработки без дополнительных инструментов"
      ]
    },
    "relatedLanguages": [
      "ruby",
      "perl",
      "javascript",
      "java"
    ],
    "ideSupport": [
      "PyCharm",
      "Visual Studio Code",
      "Sublime Text",
      "Atom",
      "IDLE"
    ],
    "community": {
      "Python.org": "официальный сайт с документацией и ресурсами.",
      "StackOverflow": "ключевой ресурс для вопросов и ответов по Python.",
      "Reddit": "сообщества r/Python для обсуждения и новостей.",
      "PyCon": "ежегодная конференция для пользователей Python."
    },
    "future": "Python продолжает быть одним из самых популярных языков программирования, особенно в области науки о данных и машинного обучения. Ожидается дальнейшее развитие экосистемы и улучшение производительности через проекты, такие как PyPy и использование JIT-компиляции."
  },
  {
    "logo": "golang",
    "name": "Go",
    "url": "https://go.dev",
    "description": "<bold>Go</bold> (часто называемый Golang) — это открытый язык программирования, разработанный в Google. Он сочетает в себе простоту и эффективность, предоставляя современные возможности для параллельного программирования и масштабирования. Go предназначен для создания надежных и эффективных программ, особенно для сетевых и многопоточных приложений.",
    "history": {
      "nameOrigin": "Название 'Go' выбрано за его краткость и простоту, отражая философию самого языка. Иногда используется название 'Golang' из-за доменного имени golang.org, но официальное название — 'Go'.",
      "developmentStart": "Разработка Go началась в 2007 году сотрудниками Google Робертом Гризмером, Робом Пайком и Кеном Томпсоном. Целью было создать язык, который бы устранял сложности C++ и обеспечивал быстрый цикл разработки.",
      "firstRelease": "Первая публичная версия Go была анонсирована в ноябре 2009 года. В 2012 году был выпущен Go 1, который стал основой для дальнейшей совместимости и развития языка."
    },
    "code": "<rkey>package</rkey> <rfunc>main</rfunc>\n\n<rkey>import</rkey> <rstr>\"fmt\"</rstr>\n\n<rkey>func</rkey> <rfunc>main</rfunc>() {\n    fmt.Println(<rstr>\"Hello, World!\"</rstr>)\n}",
    "developmentStartYear": "2007",
    "firstVersionYear": "2012",
    "creators": [
      "Роберт Гризмер",
      "Роб Пайк",
      "Кен Томпсон"
    ],
    "designStyle": "Go разработан с упором на простоту и эффективность. Он имеет минималистичный синтаксис, статическую типизацию и встроенную поддержку конкурентности через горутины и каналы. Go стремится упростить процесс разработки, компиляции и деплоя приложений.",
    "fileExtensions": {
      ".go": "Основное расширение файлов исходного кода Go."
    },
    "paradigms": {
      "paradigms": [
        2,
        6,
        14,
        17
      ]
    },
    "typing": "Статическая, Сильная, Вывод типов",
    "useCases": [
      "Сетевые серверы",
      "Веб-сервисы и API",
      "Облачные и распределенные системы",
      "Инструменты командной строки",
      "Обработка данных"
    ],
    "compatibility": [
      "Windows",
      "macOS",
      "Linux",
      "Unix",
      "WebAssembly"
    ],
    "popularFrameworks": [
      "Gin",
      "Beego",
      "Echo",
      "Revel",
      "Fiber"
    ],
    "features": [
      "Простота и лаконичность синтаксиса",
      "Встроенная поддержка конкурентности",
      "Быстрая компиляция",
      "Сборка мусора",
      "Статически связуемые исполняемые файлы"
    ],
    "prosAndCons": {
      "pros": [
        "Легкость изучения и написания кода",
        "Высокая производительность",
        "Отличная поддержка конкурентности",
        "Простота деплоя благодаря статически связуемым бинарным файлам"
      ],
      "cons": [
        "Ограниченный набор функций языка",
        "Отсутствие обобщений (Generics) до версии Go 1.18",
        "Менее развитая экосистема по сравнению с более старыми языками"
      ]
    },
    "relatedLanguages": [
      "c",
      "rust",
      "java",
      "python"
    ],
    "ideSupport": [
      "Visual Studio Code",
      "GoLand",
      "Sublime Text",
      "Atom",
      "vim"
    ],
    "community": {
      "Golang Forum": "официальный форум для обсуждения Go.",
      "StackOverflow": "основной ресурс для вопросов и ответов по Go.",
      "Reddit": "сообщество r/golang для новостей и обсуждений.",
      "GopherCon": "ежегодная конференция для разработчиков Go."
    },
    "future": "Go продолжает развиваться, добавляя новые возможности, такие как обобщения (Generics) в версии 1.18. Ожидается, что язык будет и дальше укреплять свои позиции в области облачных технологий, микросервисов и высокопроизводительных сетевых приложений."
  }


]