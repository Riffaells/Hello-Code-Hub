[
  {
    "logo": "kotlin",
    "name": "Kotlin",
    "url": "https://kotlinlang.org/",
    "description": "<bold>Kotlin</bold> — это современный язык программирования общего назначения с поддержкой статической типизации, разработанный компанией JetBrains. Он совместим с Java и ориентирован на разработку приложений для платформы Java Virtual Machine (JVM), Android, а также для веба и нативных платформ.",
    "history": {
      "nameOrigin": "Kotlin назван в честь острова Котлин, расположенного рядом с Санкт-Петербургом, где находится один из офисов JetBrains. Это следовало традиции, согласно которой языки программирования называются в честь географических мест (например, Java).",
      "developmentStart": "Начало разработки Kotlin датируется 2010 годом. Основная цель JetBrains заключалась в создании языка, который был бы полностью совместим с Java, но избавлялся от недостатков Java, таких как многословность, сложность работы с `null`, и предлагал более современные средства разработки.",
      "firstRelease": "Первая стабильная версия языка Kotlin, версия 1.0, была выпущена в феврале 2016 года. Это ознаменовало готовность языка для использования в реальных проектах. Позже, в 2017 году, Google официально объявил Kotlin языком для разработки Android-приложений, что значительно ускорило его распространение."
    },
    "code": "<rkey>fun</rkey> <rfunc>main</rfunc>() {\n    <rfunc>println</rfunc>(<rstr>\"Hello, World!\"</rstr>)\n}",
    "developmentStartYear": "2011",
    "firstVersionYear": "2016",
    "designedBy": [
      "JetBrains"
    ],
    "developer": [
      "JetBrains",
      "Kotlin Community"
    ],
    "designStyle": "Kotlin разработан с акцентом на лаконичность и читаемость кода. Он использует минималистичный синтаксис, благодаря чему разработчики могут писать меньше кода для достижения тех же целей. Например, с помощью лямбда-выражений, data-классов и расширений функций код становится более выразительным и коротким по сравнению с Java.",
    "fileExtensions": {
      ".kt": "Основное расширение файлов исходного кода Kotlin.",
      ".kts": "Используется для скриптов на Kotlin, которые могут выполняться как самостоятельные программы.",
      ".kexe": "Файлы исполняемых программ для платформы Kotlin/Native.",
      ".klib": "Библиотеки для Kotlin/Native."
    },
    "paradigms": {
      "paradigms": [
        13,
        14,
        6,
        9,
        2,
        5,
        7,
        17,
        15
      ]
    },
    "typing": "Статическая, Сильная",
    "useCases": [
      "Мобильная разработка",
      "Серверная разработка",
      "Веб-разработка",
      "Кроссплатформенная разработка"
    ],
    "compatibility": [
      "JVM",
      "Android",
      "JavaScript",
      "Native",
      "iOS",
      "macOS",
      "Windows",
      "Linux"
    ],
    "popularFrameworks": [
      "Ktor",
      "Compose Multiplatform UI",
      "Spring",
      "Exposed",
      "TornadoFX"
    ],
    "features": [
      "Безопасность null-значений",
      "Корутины",
      "Совместимость с Java",
      "Kotlin Multiplatform",
      "Лямбда-выражения",
      "Интероперабельность с Java-кодом"
    ],
    "prosAndCons": {
      "pros": [
        "Полная совместимость с Java",
        "Лаконичный и выразительный синтаксис",
        "Сильная поддержка сообщества",
        "Корутины для асинхронного программирования",
        "Kotlin Multiplatform для кроссплатформенной разработки"
      ],
      "cons": [
        "Медленная компиляция на крупных проектах",
        "Ограниченная совместимость с устаревшими Java-библиотеками",
        "Молодая экосистема по сравнению с Java"
      ]
    },
    "relatedLanguages": [
      "Java",
      "Scala",
      "Groovy",
      "Swift"
    ],
    "ideSupport": [
      "IntelliJ IDEA",
      "Android Studio",
      "Eclipse",
      "VSCode",
      "NetBeans"
    ],
    "community": {
      "Kotlin Slack": "официальное сообщество для обмена опытом и обсуждения проблем.",
      "StackOverflow": "один из основных ресурсов для поиска ответов по проблемам с Kotlin.",
      "Reddit": "дискуссионная платформа с активными обсуждениями Kotlin.",
      "KotlinConf": "ежегодная конференция, посвященная Kotlin, организуемая JetBrains.",
      "Google I/O": "конференция, где часто анонсируются новинки Kotlin для Android-разработчиков."
    },
    "future": "JetBrains активно развивает Kotlin в направлении кроссплатформенной разработки. Ожидаются улучшения в производительности компилятора и расширение функциональности для кроссплатформенных решений, таких как Kotlin Multiplatform Mobile (KMM). Также усиливается поддержка нативных платформ, включая Windows и macOS."
  },
  {
    "logo": "rust",
    "name": "Rust",
    "url": "https://www.rust-lang.org",
    "description": "<bold>Rust</bold> — это современный системный язык программирования с открытым исходным кодом, разработанный для обеспечения высокой производительности и безопасности, особенно при работе с параллелизмом. Он предназначен для замены языков C и C++ в тех областях, где безопасность памяти и многопоточность имеют критическое значение.",
    "history": {
      "nameOrigin": "Название 'Rust' происходит от названия вида грибов (ржавчина), что отражает идею роста и распространения. Также оно может ассоциироваться с ржавчиной как процессом, который со временем разрушает металл, намекая на замену старых технологий новыми.",
      "developmentStart": "Разработка Rust началась в 2006 году Греем Хоаре как личный проект, а в 2009 году Mozilla начала спонсировать его развитие. Целью было создание языка, который бы предлагал высокую производительность C и C++, но с дополнительными гарантиями безопасности.",
      "firstRelease": "Первая стабильная версия Rust 1.0 была выпущена в мае 2015 года. Этот релиз обозначил готовность языка для промышленного использования и привлек внимание разработчиков по всему миру."
    },
    "code": "<rkey>fn</rkey> <rfunc>main</rfunc>() {\n    <rfunc>println!</rfunc>(<rstr>\"Hello, World!\"</rstr>);\n}",
    "developmentStartYear": "2006",
    "firstVersionYear": "2015",
    "designedBy": [
      "Грейдон Хоаре"
    ],
    "developer": [
      "Mozilla Foundation",
      "Rust Project Developers"
    ],
    "designStyle": "Rust спроектирован для обеспечения безопасности памяти без использования сборщика мусора. Он использует концепции заимствований и владения для управления памятью, что позволяет избежать многих распространенных ошибок программирования, связанных с памятью и многопоточностью.",
    "fileExtensions": {
      ".rs": "Основное расширение файлов исходного кода Rust.",
      ".rlib": "Бинарные файлы библиотек Rust."
    },
    "paradigms": {
      "paradigms": [
        16,
        13,
        9,
        14,
        7
      ]
    },
    "typing": "Статическая, Сильная, Вывод типов",
    "useCases": [
      "Системное программирование",
      "Веб-разработка (серверная часть)",
      "Встроенные системы",
      "Разработка компиляторов",
      "Многопоточные приложения"
    ],
    "compatibility": [
      "Windows",
      "macOS",
      "Linux",
      "WebAssembly"
    ],
    "popularFrameworks": [
      "Rocket",
      "Actix",
      "Tokio",
      "Diesel",
      "Yew"
    ],
    "features": [
      "Безопасность памяти без сборщика мусора",
      "Система владения и заимствования",
      "Вывод типов",
      "Высокая производительность",
      "Параллелизм и многопоточность"
    ],
    "prosAndCons": {
      "pros": [
        "Безопасность памяти и потоков на уровне компиляции",
        "Высокая производительность, сопоставимая с C/C++",
        "Активное сообщество и растущая экосистема",
        "Отличная документация и инструментарий"
      ],
      "cons": [
        "Крутая кривая обучения",
        "Медленное время компиляции на больших проектах",
        "Меньшая экосистема по сравнению с более зрелыми языками"
      ]
    },
    "relatedLanguages": [
      "C",
      "C++",
      "Go",
      "Swift"
    ],
    "ideSupport": [
      "Visual Studio Code",
      "IntelliJ IDEA",
      "CLion",
      "Atom",
      "Sublime Text"
    ],
    "community": {
      "Rust Forum": "официальный форум для обсуждения языка и экосистемы.",
      "Rust Reddit": "активное сообщество на Reddit для новостей и обсуждений.",
      "StackOverflow": "основной ресурс для решения проблем и ответов на вопросы по Rust.",
      "RustConf": "ежегодная конференция, посвященная Rust и его экосистеме."
    },
    "future": "Rust продолжает набирать популярность, особенно в областях системного программирования и безопасности. С ростом интереса к WebAssembly и встраиваемым системам ожидается, что Rust будет играть ключевую роль в этих сферах. Улучшения в инструментарии и экосистеме будут способствовать более широкому принятию языка."
  },
  {
    "logo": "cpp",
    "name": "C++",
    "url": "https://isocpp.org",
    "description": "<bold>C++</bold> — это высокопроизводительный язык программирования общего назначения, поддерживающий множество парадигм, включая процедурное, объектно-ориентированное и обобщённое программирование. Он является расширением языка C и широко используется для разработки системного и прикладного программного обеспечения, драйверов, клиент-серверных приложений и встроенного ПО.",
    "history": {
      "nameOrigin": "Название 'C++' было предложено Риком Масситти в 1983 году как игра слов, основанная на операторе инкремента '++' в C, что подразумевает, что C++ является улучшенной версией C.",
      "developmentStart": "Разработка C++ началась в 1979 году Бьёрном Страуструпом в Bell Labs. Он стремился добавить объектно-ориентированные возможности в язык C, сохраняя при этом его эффективность и гибкость.",
      "firstRelease": "Первая коммерческая реализация C++ появилась в 1985 году. С тех пор язык постоянно развивается, и последние стандарты, такие как C++11, C++14, C++17 и C++20, добавили множество новых возможностей."
    },
    "code": "<rkey>#include</rkey> <rstr><iostream></rstr>\n\n<rkey>int</rkey> <rfunc>main</rfunc>() {\n    <rfunc>std</rfunc>::<rfunc>cout</rfunc> << <rstr>\"Hello, World!\"</rstr> << <rfunc>std</rfunc>::<rfunc>endl</rfunc>;\n    <rkey>return</rkey> <rnum>0</rnum>;\n}",
    "developmentStartYear": "1979",
    "firstVersionYear": "1985",
    "designedBy": [
      "Бьёрн Страуструп"
    ],
    "developer": [
      "ISO/IEC JTC1/SC22/WG21"
    ],
    "designStyle": "C++ сочетает в себе эффективность и низкоуровневый контроль, характерный для C, с возможностями высокого уровня для абстракции данных и объектно-ориентированного программирования. Он поддерживает множество парадигм и предоставляет богатый набор инструментов для разработки сложных приложений.",
    "fileExtensions": {
      ".cpp": "Основное расширение файлов исходного кода C++.",
      ".hpp": "Заголовочные файлы C++.",
      ".cc": "Альтернативное расширение для файлов исходного кода.",
      ".h": "Заголовочные файлы, общие для C и C++."
    },
    "paradigms": {
      "paradigms": [
        16,
        13,
        14,
        7,
        9,
        11
      ]
    },
    "typing": "Статическая, Номинальная, Вывод типов",
    "useCases": [
      "Системное программирование",
      "Игровая индустрия",
      "Встроенные системы",
      "Разработка приложений с высокой производительностью",
      "Графические приложения"
    ],
    "compatibility": [
      "Windows",
      "macOS",
      "Linux",
      "Unix",
      "Встроенные платформы"
    ],
    "popularFrameworks": [
      "Qt",
      "Boost",
      "STL",
      "Unreal Engine",
      "OpenCV"
    ],
    "features": [
      "Высокая производительность и контроль над ресурсами",
      "Объектно-ориентированное программирование",
      "Шаблоны и обобщённое программирование",
      "Прямая работа с памятью",
      "Поддержка множества парадигм"
    ],
    "prosAndCons": {
      "pros": [
        "Высокая производительность",
        "Гибкость и мощность языка",
        "Широкая база кода и библиотек",
        "Контроль над аппаратными ресурсами"
      ],
      "cons": [
        "Сложность языка и крутая кривая обучения",
        "Потенциальные проблемы с безопасностью памяти",
        "Длительное время компиляции",
        "Отсутствие единого стандарта для сборки и управления пакетами"
      ]
    },
    "relatedLanguages": [
      "C",
      "Java",
      "C#",
      "Rust"
    ],
    "ideSupport": [
      "Visual Studio",
      "CLion",
      "Eclipse",
      "Qt Creator",
      "Xcode"
    ],
    "community": {
      "ISO C++ Committee": "организация, ответственная за стандартизацию языка.",
      "C++ Reddit": "активное сообщество на Reddit для обсуждения языка.",
      "StackOverflow": "ключевой ресурс для решений проблем и вопросов по C++.",
      "CppCon": "ежегодная конференция, посвященная C++."
    },
    "future": "C++ продолжает эволюционировать с новыми стандартами, такими как C++20 и предстоящим C++23, которые добавляют новые возможности и улучшают существующие. Язык остается одним из основных в областях, требующих высокой производительности, и продолжит использоваться в системном программировании, игровой индустрии и встраиваемых системах."
  },
  {
    "logo": "python",
    "name": "Python",
    "url": "https://www.python.org",
    "description": "<bold>Python</bold> — это высокоуровневый язык программирования общего назначения с динамической типизацией, известный своей простотой и читаемостью синтаксиса. Он поддерживает несколько парадигм программирования и широко используется в веб-разработке, науке о данных, автоматизации, искусственном интеллекте и многих других областях.",
    "history": {
      "nameOrigin": "Название 'Python' было выбрано Гвидо ван Россумом в честь британской комедийной группы 'Monty Python', а не в честь змеи, как многие предполагают.",
      "developmentStart": "Разработка Python началась в конце 1980-х годов, а первая версия была выпущена в 1991 году. Гвидо ван Россум создал Python как наследника языка ABC, стремясь создать язык с простым синтаксисом и мощными возможностями.",
      "firstRelease": "Первая публичная версия Python 0.9.0 была выпущена в 1991 году. С тех пор язык активно развивается, и текущие версии Python 3.x продолжают расширять функциональность и производительность языка."
    },
    "code": "<rkey>def</rkey> <rfunc>main</rfunc>():\n    <rfunc>print</rfunc>(<rstr>\"Hello, World!\"</rstr>)\n\n<rkey>if</rkey> <rstatic>__name__</rstatic> == <rstr>'__main__'</rstr>:\n    <rfunc>main</rfunc>()",
    "developmentStartYear": "1989",
    "firstVersionYear": "1991",
    "designedBy": [
      "Гвидо ван Россум"
    ],
    "developer": [
      "Python Software Foundation"
    ],
    "designStyle": "Python разработан с акцентом на читаемость и краткость кода. Он использует отступы для определения блоков кода, что способствует структурированному и понятному написанию программ. Python стремится к простоте и легкости использования, предоставляя при этом мощные библиотеки и инструменты.",
    "fileExtensions": {
      ".py": "Основное расширение файлов исходного кода Python.",
      ".pyc": "Скомпилированные байт-код файлы Python.",
      ".pyd": "Динамические модули Python для Windows.",
      ".pyw": "Скрипты Python для Windows без консольного окна."
    },
    "paradigms": {
      "paradigms": [
        6,
        9,
        14,
        5,
        7,
        13,
        18,
        8
      ]
    },
    "typing": "Динамическая, Уткиная типизация",
    "useCases": [
      "Веб-разработка",
      "Наука о данных и машинное обучение",
      "Автоматизация и скрипты",
      "Обработка естественного языка",
      "Образование"
    ],
    "compatibility": [
      "Windows",
      "macOS",
      "Linux",
      "Unix",
      "Встроенные системы (через MicroPython)"
    ],
    "popularFrameworks": [
      "Django",
      "Flask",
      "TensorFlow",
      "PyTorch",
      "Pandas"
    ],
    "features": [
      "Простота и читаемость синтаксиса",
      "Большая стандартная библиотека",
      "Динамическая типизация",
      "Интерпретируемый язык",
      "Кроссплатформенность"
    ],
    "prosAndCons": {
      "pros": [
        "Легкость изучения и использования",
        "Большое сообщество и экосистема",
        "Богатый набор библиотек и фреймворков",
        "Кроссплатформенная совместимость"
      ],
      "cons": [
        "Низкая скорость выполнения по сравнению с компилируемыми языками",
        "Динамическая типизация может привести к ошибкам в рантайме",
        "Не подходит для мобильной и встроенной разработки без дополнительных инструментов"
      ]
    },
    "relatedLanguages": [
      "Ruby",
      "Perl",
      "JavaScript",
      "Java"
    ],
    "ideSupport": [
      "PyCharm",
      "Visual Studio Code",
      "Sublime Text",
      "Atom",
      "IDLE"
    ],
    "community": {
      "Python.org": "официальный сайт с документацией и ресурсами.",
      "StackOverflow": "ключевой ресурс для вопросов и ответов по Python.",
      "Reddit": "сообщества r/Python для обсуждения и новостей.",
      "PyCon": "ежегодная конференция для пользователей Python."
    },
    "future": "Python продолжает быть одним из самых популярных языков программирования, особенно в области науки о данных и машинного обучения. Ожидается дальнейшее развитие экосистемы и улучшение производительности через проекты, такие как PyPy и использование JIT-компиляции."
  },
  {
    "logo": "golang",
    "name": "Go",
    "url": "https://go.dev",
    "description": "<bold>Go</bold> (часто называемый Golang) — это открытый язык программирования, разработанный в Google. Он сочетает в себе простоту и эффективность, предоставляя современные возможности для параллельного программирования и масштабирования. Go предназначен для создания надежных и эффективных программ, особенно для сетевых и многопоточных приложений.",
    "history": {
      "nameOrigin": "Название 'Go' выбрано за его краткость и простоту, отражая философию самого языка. Иногда используется название 'Golang' из-за доменного имени golang.org, но официальное название — 'Go'.",
      "developmentStart": "Разработка Go началась в 2007 году сотрудниками Google Робертом Гризмером, Робом Пайком и Кеном Томпсоном. Целью было создать язык, который бы устранял сложности C++ и обеспечивал быстрый цикл разработки.",
      "firstRelease": "Первая публичная версия Go была анонсирована в ноябре 2009 года. В 2012 году был выпущен Go 1, который стал основой для дальнейшей совместимости и развития языка."
    },
    "code": "<rkey>package</rkey> <rfunc>main</rfunc>\n\n<rkey>import</rkey> <rstr>\"fmt\"</rstr>\n\n<rkey>func</rkey> <rfunc>main</rfunc>() {\n    <rstatic>fmt</rstatic>.<rfunc>Println</rfunc>(<rstr>\"Hello, World!\"</rstr>)\n}",
    "developmentStartYear": "2007",
    "firstVersionYear": "2012",
    "designedBy": [
      "Роберт Гризмер",
      "Роб Пайк",
      "Кен Томпсон"
    ],
    "developer": [
      "Google"
    ],
    "designStyle": "Go разработан с упором на простоту и эффективность. Он имеет минималистичный синтаксис, статическую типизацию и встроенную поддержку конкурентности через горутины и каналы. Go стремится упростить процесс разработки, компиляции и деплоя приложений.",
    "fileExtensions": {
      ".go": "Основное расширение файлов исходного кода Go."
    },
    "paradigms": {
      "paradigms": [
        2,
        6,
        14,
        17
      ]
    },
    "typing": "Статическая, Сильная, Вывод типов",
    "useCases": [
      "Сетевые серверы",
      "Веб-сервисы и API",
      "Облачные и распределенные системы",
      "Инструменты командной строки",
      "Обработка данных"
    ],
    "compatibility": [
      "Windows",
      "macOS",
      "Linux",
      "Unix",
      "WebAssembly"
    ],
    "popularFrameworks": [
      "Gin",
      "Beego",
      "Echo",
      "Revel",
      "Fiber"
    ],
    "features": [
      "Простота и лаконичность синтаксиса",
      "Встроенная поддержка конкурентности",
      "Быстрая компиляция",
      "Сборка мусора",
      "Статически связуемые исполняемые файлы"
    ],
    "prosAndCons": {
      "pros": [
        "Легкость изучения и написания кода",
        "Высокая производительность",
        "Отличная поддержка конкурентности",
        "Простота деплоя благодаря статически связуемым бинарным файлам"
      ],
      "cons": [
        "Ограниченный набор функций языка",
        "Отсутствие обобщений (Generics) до версии Go 1.18",
        "Менее развитая экосистема по сравнению с более старыми языками"
      ]
    },
    "relatedLanguages": [
      "C",
      "Rust",
      "Java",
      "Python"
    ],
    "ideSupport": [
      "Visual Studio Code",
      "GoLand",
      "Sublime Text",
      "Atom",
      "vim"
    ],
    "community": {
      "Golang Forum": "официальный форум для обсуждения Go.",
      "StackOverflow": "основной ресурс для вопросов и ответов по Go.",
      "Reddit": "сообщество r/golang для новостей и обсуждений.",
      "GopherCon": "ежегодная конференция для разработчиков Go."
    },
    "future": "Go продолжает развиваться, добавляя новые возможности, такие как обобщения (Generics) в версии 1.18. Ожидается, что язык будет и дальше укреплять свои позиции в области облачных технологий, микросервисов и высокопроизводительных сетевых приложений."
  },
  {
    "logo": "java",
    "name": "Java",
    "url": "https://www.java.com",
    "description": "<bold>Java</bold> — это высокоуровневый объектно-ориентированный язык программирования общего назначения, разработанный компанией Sun Microsystems (ныне часть Oracle). Java широко используется для разработки веб-приложений, мобильных приложений, корпоративного ПО и встраиваемых систем.",
    "history": {
      "nameOrigin": "Название 'Java' было выбрано в честь сорта кофе, популярного среди разработчиков. Изначально язык назывался 'Oak', но это название уже было зарегистрировано.",
      "developmentStart": "Разработка Java началась в 1991 году под руководством Джеймса Гослинга. Целью было создание платформонезависимого языка для встраиваемых систем.",
      "firstRelease": "Первая версия Java 1.0 была выпущена в 1996 году. С тех пор язык постоянно развивается, и текущие версии Java продолжают добавлять новые возможности и улучшения производительности."
    },
    "code": "<rkey>public class</rkey> <rnum>Main</rnum> {\n    <rkey>public static void</rkey> <rfunc>main</rfunc>(<rnum>String</rnum>[] args) {\n        <rstatic>System</rstatic>.<rstatic>out</rstatic>.<rfunc>println</rfunc>(<rstr>\"Hello, World!\"</rstr>);\n    }\n}",
    "developmentStartYear": "1991",
    "firstVersionYear": "1996",
    "designedBy": [
      "Джеймс Гослинг"
    ],
    "developer": [
      "Sun Microsystems",
      "Oracle Corporation"
    ],
    "designStyle": "Java разработан с упором на переносимость и безопасность. Он использует виртуальную машину Java (JVM) для выполнения байт-кода, что позволяет запускать программы на различных платформах без изменения кода. Язык стремится к простоте и надежности, обеспечивая автоматическое управление памятью и строгую типизацию.",
    "fileExtensions": {
      ".java": "Основное расширение файлов исходного кода Java.",
      ".class": "Скомпилированные байт-код файлы Java.",
      ".jar": "Java Archive — архив, содержащий классы и метаданные."
    },
    "paradigms": {
      "paradigms": [
        14,
        9,
        7,
        17,
        15,
        8
      ]
    },
    "typing": "Статическая, Сильная",
    "useCases": [
      "Веб-приложения",
      "Мобильные приложения (Android)",
      "Корпоративное ПО",
      "Встроенные системы",
      "Облачные сервисы"
    ],
    "compatibility": [
      "Windows",
      "macOS",
      "Linux",
      "Unix",
      "Android"
    ],
    "popularFrameworks": [
      "Spring",
      "Hibernate",
      "JavaServer Faces",
      "Struts",
      "Vaadin"
    ],
    "features": [
      "Платформонезависимость",
      "Объектно-ориентированное программирование",
      "Автоматическое управление памятью",
      "Большая стандартная библиотека",
      "Поддержка многопоточности"
    ],
    "prosAndCons": {
      "pros": [
        "Платформонезависимость через JVM",
        "Большое сообщество и экосистема",
        "Хорошая производительность",
        "Масштабируемость для крупных проектов"
      ],
      "cons": [
        "Вербозность кода",
        "Медленное время запуска из-за JVM",
        "Менее подходит для низкоуровневого программирования"
      ]
    },
    "relatedLanguages": [
      "C++",
      "C#",
      "Kotlin",
      "Scala"
    ],
    "ideSupport": [
      "IntelliJ IDEA",
      "Eclipse",
      "NetBeans",
      "Visual Studio Code",
      "Android Studio"
    ],
    "community": {
      "Oracle Java Community": "официальное сообщество и ресурсы по Java.",
      "StackOverflow": "ключевой ресурс для вопросов и ответов по Java.",
      "Reddit": "сообщество r/java для обсуждения и новостей.",
      "JavaOne": "ежегодная конференция для разработчиков Java."
    },
    "future": "Java продолжает эволюционировать, с регулярными обновлениями и добавлением новых возможностей. Ожидается дальнейшее развитие в области облачных технологий, микросервисов и повышения производительности JVM. Язык остается одним из самых популярных для корпоративного программирования."
  },
  {
    "logo": "csharp",
    "name": "C#",
    "url": "https://dotnet.microsoft.com/languages/csharp",
    "description": "<bold>C#</bold> — это современный объектно-ориентированный язык программирования, разработанный компанией Microsoft в рамках платформы .NET. Он предназначен для создания разнообразных приложений, включая веб-сервисы, настольные приложения, игры и мобильные приложения.",
    "history": {
      "nameOrigin": "Название 'C#' произносится как 'си шарп', где 'шарп' (#) указывает на повышение на полтона в музыкальной нотации, подразумевая, что C# является эволюцией языка C.",
      "developmentStart": "Разработка C# началась в конце 1990-х годов под руководством Андерса Хейлсберга в Microsoft. Целью было создание языка для новой платформы .NET, который сочетал бы простоту и мощность.",
      "firstRelease": "Первая версия C# была выпущена в 2002 году вместе с .NET Framework 1.0. С тех пор язык активно развивается, добавляя новые возможности и улучшения."
    },
    "code": "<rkey>using</rkey> <rstatic>System</rstatic>;\n\n<rkey>class</rkey> <rfunc>Program</rfunc> {\n    <rkey>static void</rkey> <rfunc>Main</rfunc>(<rkey>string</rkey>[] args) {\n        <rstatic>Console</rstatic>.<rfunc>WriteLine</rfunc>(<rstr>\"Hello, World!\"</rstr>);\n    }\n}",
    "developmentStartYear": "1999",
    "firstVersionYear": "2002",
    "designedBy": [
      "Андерс Хейлсберг"
    ],
    "developer": [
      "Microsoft"
    ],
    "designStyle": "C# разработан для сочетания простоты, современности и мощных возможностей. Он поддерживает статическую типизацию, автоматическое управление памятью и современные возможности, такие как LINQ, асинхронное программирование и обобщения. Язык интегрирован с платформой .NET, что обеспечивает широкие возможности для разработки приложений.",
    "fileExtensions": {
      ".cs": "Основное расширение файлов исходного кода C#."
    },
    "paradigms": {
      "paradigms": [
        14,
        9,
        7,
        6,
        17,
        15,
        13,
        8
      ]
    },
    "typing": "Статическая, Сильная, Вывод типов",
    "useCases": [
      "Веб-разработка",
      "Настольные приложения",
      "Игровая индустрия (Unity)",
      "Мобильные приложения (Xamarin)",
      "Корпоративные решения"
    ],
    "compatibility": [
      "Windows",
      "macOS",
      "Linux",
      "Android",
      "iOS"
    ],
    "popularFrameworks": [
      ".NET",
      "ASP.NET",
      "Unity",
      "Xamarin",
      "Blazor"
    ],
    "features": [
      "Объектно-ориентированное программирование",
      "Интеграция с .NET",
      "Современные языковые возможности",
      "Асинхронное программирование",
      "Автоматическое управление памятью"
    ],
    "prosAndCons": {
      "pros": [
        "Мощная и современная платформа",
        "Большое сообщество и поддержка Microsoft",
        "Широкие возможности для кроссплатформенной разработки",
        "Хорошая производительность"
      ],
      "cons": [
        "Зависимость от экосистемы Microsoft",
        "Более высокая сложность по сравнению с некоторыми языками",
        "Меньшая распространенность в открытом программном обеспечении"
      ]
    },
    "relatedLanguages": [
      "Java",
      "C++",
      "F#",
      "Visual Basic .NET"
    ],
    "ideSupport": [
      "Visual Studio",
      "Visual Studio Code",
      "Rider",
      "MonoDevelop",
      "Eclipse (с плагинами)"
    ],
    "community": {
      "Microsoft Developer Network": "официальные ресурсы и документация.",
      "StackOverflow": "ключевой ресурс для вопросов и ответов по C#.",
      "Reddit": "сообщество r/csharp для обсуждений и новостей.",
      ".NET Conf": "ежегодная конференция для разработчиков .NET и C#."
    },
    "future": "C# продолжает активно развиваться вместе с платформой .NET. Ожидаются новые возможности для облачной и кроссплатформенной разработки, улучшения в производительности и удобстве использования языка. C# остается ключевым инструментом для разработки на платформе Microsoft."
  },
  {
    "logo": "javascript",
    "name": "JavaScript",
    "url": "https://developer.mozilla.org/ru/docs/Web/JavaScript",
    "description": "<bold>JavaScript</bold> — это динамический язык программирования высокого уровня, широко используемый для создания интерактивных веб-страниц. Изначально разработанный для браузеров, JavaScript теперь применяется и на стороне сервера (Node.js), а также в разработке мобильных и десктопных приложений.",
    "history": {
      "nameOrigin": "Название 'JavaScript' было выбрано в маркетинговых целях, чтобы воспользоваться популярностью Java в 1995 году. Изначально язык назывался 'Mocha', затем 'LiveScript', прежде чем получил свое текущее название.",
      "developmentStart": "JavaScript был разработан в 1995 году Бренданом Эйхом из Netscape за 10 дней. Целью было создание языка скриптов для добавления интерактивности на веб-страницы.",
      "firstRelease": "Первая версия JavaScript была внедрена в браузер Netscape Navigator 2.0 в 1996 году. С тех пор язык значительно эволюционировал, и современные стандарты ECMAScript продолжают его развитие."
    },
    "code": "<rkey>console</rkey>.<rfunc>log</rfunc>(<rstr>'Hello, World!'</rstr>);",
    "developmentStartYear": "1995",
    "firstVersionYear": "1996",
    "designedBy": [
      "Брендан Эйх"
    ],
    "developer": [
      "Netscape",
      "Mozilla Foundation",
      "Ecma International"
    ],
    "designStyle": "JavaScript разработан как язык с динамической типизацией и поддержкой функционального, императивного и прототипно-ориентированного программирования. Он предназначен для легкого встраивания в HTML и выполнения в браузере, но теперь также широко используется вне браузера благодаря Node.js.",
    "fileExtensions": {
      ".js": "Основное расширение файлов исходного кода JavaScript.",
      ".mjs": "Модули ECMAScript.",
      ".cjs": "CommonJS модули."
    },
    "paradigms": {
      "paradigms": [
        6,
        9,
        14,
        17,
        18,
        13,
        8
      ]
    },
    "typing": "Динамическая, Уткиная типизация",
    "useCases": [
      "Веб-разработка (фронтенд)",
      "Серверная разработка (Node.js)",
      "Мобильные приложения (React Native)",
      "Десктопные приложения (Electron)",
      "Игровая разработка"
    ],
    "compatibility": [
      "Веб-браузеры",
      "Node.js",
      "Deno",
      "Windows",
      "macOS",
      "Linux"
    ],
    "popularFrameworks": [
      "React",
      "Angular",
      "Vue.js",
      "Node.js",
      "Express"
    ],
    "features": [
      "Динамическая типизация",
      "Прототипное наследование",
      "Асинхронное программирование",
      "Широкая экосистема",
      "Выполнение на стороне клиента и сервера"
    ],
    "prosAndCons": {
      "pros": [
        "Широкое использование в веб-разработке",
        "Большое сообщество и экосистема",
        "Гибкость языка",
        "Возможность использования одного языка на фронтенде и бэкенде"
      ],
      "cons": [
        "Неконсистентность синтаксиса и поведения",
        "Проблемы с производительностью в некоторых случаях",
        "Отсутствие статической типизации (решается с помощью TypeScript)"
      ]
    },
    "relatedLanguages": [
      "TypeScript",
      "CoffeeScript",
      "Dart",
      "Python"
    ],
    "ideSupport": [
      "Visual Studio Code",
      "WebStorm",
      "Atom",
      "Sublime Text",
      "Brackets"
    ],
    "community": {
      "MDN Web Docs": "официальная документация по веб-технологиям.",
      "StackOverflow": "ключевой ресурс для вопросов и ответов по JavaScript.",
      "Reddit": "сообщество r/javascript для обсуждений и новостей.",
      "JSConf": "международная конференция для разработчиков JavaScript."
    },
    "future": "JavaScript продолжает оставаться основным языком для веб-разработки. С развитием новых технологий, таких как WebAssembly, и улучшением производительности движков JavaScript, язык будет и дальше играть ключевую роль в создании веб-приложений и сервисов."
  },
  {
    "logo": "c",
    "name": "C",
    "url": "https://www.iso.org/standard/74528.html",
    "description": "<bold>C</bold> — это универсальный процедурный язык программирования, известный своей эффективностью и низкоуровневым доступом к памяти. Разработанный для системного программирования, C широко используется для разработки операционных систем, компиляторов, встроенных систем и других приложений, требующих высокой производительности.",
    "history": {
      "nameOrigin": "Название 'C' было выбрано, так как язык является прямым наследником языка 'B', который в свою очередь был основан на 'BCPL'.",
      "developmentStart": "Разработка языка C началась в 1969 году в Bell Labs Деннисом Ритчи. Целью было создание языка для разработки операционной системы UNIX.",
      "firstRelease": "Язык C был официально представлен в 1972 году. В 1978 году вышла книга 'The C Programming Language' Денниса Ритчи и Брайана Кернигана, которая стала классическим руководством по языку."
    },
    "code": "<rkey>#include</rkey> <rstr><stdio.h></rstr>\n\n<rkey>int</rkey> <rfunc>main</rfunc>() {\n    <rfunc>printf</rfunc>(<rstr>\"Hello, World!\\n\"</rstr>);\n    <rkey>return</rkey> <rnum>0</rnum>;\n}",
    "developmentStartYear": "1969",
    "firstVersionYear": "1972",
    "designedBy": [
      "Деннис Ритчи"
    ],
    "developer": [
      "Bell Labs"
    ],
    "designStyle": "C разработан для системного программирования и предоставляет низкоуровневый доступ к памяти через указатели. Язык ориентирован на эффективность и минимализм, предоставляя только базовые конструкции программирования и полагаясь на библиотеки для расширенной функциональности.",
    "fileExtensions": {
      ".c": "Основное расширение файлов исходного кода C.",
      ".h": "Заголовочные файлы C."
    },
    "paradigms": {
      "paradigms": [
        16,
        9,
        2,
        11
      ]
    },
    "typing": "Статическая, Непрозрачная",
    "useCases": [
      "Системное программирование",
      "Встроенные системы",
      "Разработка операционных систем",
      "Разработка компиляторов",
      "Библиотеки для других языков"
    ],
    "compatibility": [
      "Windows",
      "macOS",
      "Linux",
      "Unix",
      "Встроенные платформы"
    ],
    "popularFrameworks": [
      "GTK",
      "OpenGL",
      "POSIX Threads",
      "MPI",
      "Embedded C"
    ],
    "features": [
      "Низкоуровневый доступ к памяти",
      "Высокая производительность",
      "Минимализм языка",
      "Прямое управление ресурсами",
      "Широкая портируемость"
    ],
    "prosAndCons": {
      "pros": [
        "Высокая производительность и эффективность",
        "Контроль над аппаратными ресурсами",
        "Широкая распространенность и стандарт",
        "Базис для многих других языков"
      ],
      "cons": [
        "Отсутствие безопасности памяти",
        "Сложность управления указателями",
        "Отсутствие современных языковых возможностей",
        "Трудоемкость разработки больших проектов"
      ]
    },
    "relatedLanguages": [
      "C++",
      "Objective-C",
      "Rust",
      "Go"
    ],
    "ideSupport": [
      "Visual Studio",
      "CLion",
      "Eclipse",
      "Code::Blocks",
      "vim"
    ],
    "community": {
      "ISO C Committee": "организация по стандартизации языка C.",
      "StackOverflow": "ключевой ресурс для вопросов и ответов по C.",
      "Reddit": "сообщество r/C_Programming для обсуждений.",
      "C Conference": "мероприятия и конференции по языку C."
    },
    "future": "C остается ключевым языком для системного и встроенного программирования. Несмотря на возраст, язык продолжает обновляться через новые стандарты, такие как C11 и C18. Ожидается, что C будет и дальше использоваться там, где необходима максимальная производительность и контроль над аппаратурой."
  },
  {
    "logo": "ruby",
    "name": "Ruby",
    "url": "https://www.ruby-lang.org",
    "description": "<bold>Ruby</bold> — это динамический, объектно-ориентированный язык программирования, известный своей простотой и элегантностью синтаксиса. Разработанный для повышения производительности разработчика, Ruby широко используется в веб-разработке благодаря фреймворку Ruby on Rails.",
    "history": {
      "nameOrigin": "Название 'Ruby' было выбрано как драгоценный камень, следующий за 'Perl' (жемчужина) в списке драгоценностей, отражая преемственность идей между языками.",
      "developmentStart": "Разработка Ruby началась в 1993 году Юкихиро Мацумото в Японии. Целью было создание языка, который был бы более объектно-ориентированным и удобным для человека, чем существующие на тот момент языки.",
      "firstRelease": "Первая публичная версия Ruby 0.95 была выпущена в 1995 году. С тех пор язык развивается, приобретая популярность во всем мире."
    },
    "code": "<rkey>puts</rkey> <rstr>'Hello, World!'</rstr>",
    "developmentStartYear": "1993",
    "firstVersionYear": "1995",
    "designedBy": [
      "Юкихиро Мацумото"
    ],
    "developer": [
      "Ruby Association",
      "Community"
    ],
    "designStyle": "Ruby разработан с акцентом на продуктивность и удовольствие от программирования. Он объединяет в себе черты Perl, Smalltalk, Eiffel и других языков, предоставляя мощные возможности для метапрограммирования, динамическую типизацию и полную объектную модель.",
    "fileExtensions": {
      ".rb": "Основное расширение файлов исходного кода Ruby.",
      ".rbw": "Скрипты Ruby для Windows без консольного окна."
    },
    "paradigms": {
      "paradigms": [
        14,
        6,
        9,
        17,
        18,
        13,
        8
      ]
    },
    "typing": "Динамическая, Уткиная типизация",
    "useCases": [
      "Веб-разработка",
      "Скрипты и автоматизация",
      "Обработка данных",
      "Разработка прототипов",
      "Тестирование"
    ],
    "compatibility": [
      "Windows",
      "macOS",
      "Linux",
      "Unix"
    ],
    "popularFrameworks": [
      "Ruby on Rails",
      "Sinatra",
      "Hanami",
      "Padrino",
      "RSpec"
    ],
    "features": [
      "Полное объектно-ориентированное программирование",
      "Динамическая типизация",
      "Метапрограммирование",
      "Элегантный и читаемый синтаксис",
      "Большая стандартная библиотека"
    ],
    "prosAndCons": {
      "pros": [
        "Высокая продуктивность разработчика",
        "Элегантный и простой в освоении синтаксис",
        "Широкая экосистема, особенно для веб-разработки",
        "Активное и дружелюбное сообщество"
      ],
      "cons": [
        "Низкая производительность по сравнению с компилируемыми языками",
        "Проблемы с масштабированием в больших приложениях",
        "Меньшая распространенность вне веб-разработки"
      ]
    },
    "relatedLanguages": [
      "Perl",
      "Python",
      "Smalltalk",
      "Elixir"
    ],
    "ideSupport": [
      "RubyMine",
      "Visual Studio Code",
      "Sublime Text",
      "Atom",
      "vim"
    ],
    "community": {
      "Ruby Community": "официальные ресурсы и документация.",
      "StackOverflow": "ключевой ресурс для вопросов и ответов по Ruby.",
      "Reddit": "сообщество r/ruby для обсуждений и новостей.",
      "RubyConf": "ежегодная конференция для разработчиков Ruby."
    },
    "future": "Ruby продолжает использоваться для веб-разработки и остается популярным благодаря Ruby on Rails. Ожидается дальнейшее развитие языка с улучшением производительности и добавлением новых возможностей, что поможет сохранить его актуальность в быстро меняющемся мире технологий."
  },
  {
    "logo": "php",
    "name": "PHP",
    "url": "https://www.php.net",
    "description": "<bold>PHP</bold> — это широко используемый скриптовый язык общего назначения с открытым исходным кодом, специально предназначенный для веб-разработки и встроенный в HTML. Он выполняется на сервере и способен создавать динамические веб-страницы и приложения.",
    "history": {
      "nameOrigin": "Изначально 'PHP' означало 'Personal Home Page' (Персональная домашняя страница). Позже акроним был изменен на 'PHP: Hypertext Preprocessor', являющийся рекурсивным акронимом.",
      "developmentStart": "PHP был создан Расмусом Лердорфом в 1994 году как набор скриптов на Perl для отслеживания посещений его онлайн-резюме. Со временем проект эволюционировал в полноценный язык программирования.",
      "firstRelease": "Первая версия PHP Tools была выпущена в 1995 году. С тех пор язык активно развивается и является одним из самых популярных для веб-разработки."
    },
    "code": "<rkey><?php</rkey>\n<rfunc>echo</rfunc> <rstr>'Hello, World!'</rstr>;\n<rkey>?></rkey>",
    "developmentStartYear": "1994",
    "firstVersionYear": "1995",
    "designedBy": [
      "Расмус Лердорф"
    ],
    "developer": [
      "The PHP Development Team",
      "Zend Technologies"
    ],
    "designStyle": "PHP разработан для простоты использования в веб-разработке. Он интегрируется с HTML и поддерживает множество баз данных. Язык имеет динамическую типизацию и предоставляет широкий набор встроенных функций для работы с веб-сервисами.",
    "fileExtensions": {
      ".php": "Основное расширение файлов исходного кода PHP.",
      ".phtml": "Альтернативное расширение для PHP-файлов, часто используемое в шаблонах.",
      ".php3": "Расширение для старых версий PHP."
    },
    "paradigms": {
      "paradigms": [
        9,
        14,
        17,
        18,
        6,
        13,
        8
      ]
    },
    "typing": "Динамическая, Слабая",
    "useCases": [
      "Веб-разработка",
      "Создание серверной логики",
      "Работа с базами данных",
      "Создание контент-менеджмент систем",
      "API-разработка"
    ],
    "compatibility": [
      "Windows",
      "macOS",
      "Linux",
      "Unix"
    ],
    "popularFrameworks": [
      "Laravel",
      "Symfony",
      "CodeIgniter",
      "Yii",
      "Zend Framework"
    ],
    "features": [
      "Интеграция с HTML",
      "Широкая поддержка баз данных",
      "Большое количество встроенных функций",
      "Кроссплатформенность",
      "Поддержка объектно-ориентированного программирования"
    ],
    "prosAndCons": {
      "pros": [
        "Простота освоения",
        "Широкое распространение в веб-разработке",
        "Большое сообщество и экосистема",
        "Быстрое развитие и обновления языка"
      ],
      "cons": [
        "Непоследовательность синтаксиса и функций",
        "Исторические проблемы с безопасностью",
        "Менее строгая типизация может приводить к ошибкам"
      ]
    },
    "relatedLanguages": [
      "Perl",
      "Python",
      "Ruby",
      "JavaScript"
    ],
    "ideSupport": [
      "PHPStorm",
      "Visual Studio Code",
      "Sublime Text",
      "Atom",
      "NetBeans"
    ],
    "community": {
      "PHP.net": "официальный сайт с документацией и ресурсами.",
      "StackOverflow": "ключевой ресурс для вопросов и ответов по PHP.",
      "Reddit": "сообщество r/PHP для обсуждений и новостей.",
      "PHP Conference": "мероприятия и конференции для разработчиков PHP."
    },
    "future": "PHP продолжает быть одним из ведущих языков для веб-разработки. С выходом новых версий, таких как PHP 8, язык получает значительные улучшения в производительности и функциональности. Ожидается, что PHP сохранит свою позицию благодаря широкому использованию и активному развитию."
  },
  {
    "logo": "scala",
    "name": "Scala",
    "url": "https://www.scala-lang.org",
    "description": "<bold>Scala</bold> — это современный мультипарадигменный язык программирования общего назначения, сочетающий функциональное и объектно-ориентированное программирование. Работает на платформе JVM и предназначен для создания масштабируемых приложений.",
    "history": {
      "nameOrigin": "Название 'Scala' происходит от слов 'scalable language', отражая его способность масштабироваться вместе с потребностями пользователей.",
      "developmentStart": "Разработка Scala началась в 2001 году под руководством Мартина Одерски в EPFL (Швейцария).",
      "firstRelease": "Первая версия Scala была выпущена в 2004 году, предлагая новые возможности для JVM-разработчиков."
    },
    "code": "<rkey>object</rkey> <rfunc>Main</rfunc> {\n  <rkey>def</rkey> <rfunc>main</rfunc>(args: <rnum>Array</rnum>[<rnum>String]</rnum>): <rnum>Unit</rnum> = {\n    <rfunc>println</rfunc>(<rstr>\"Hello, World!\"</rstr>)\n  }\n}",
    "developmentStartYear": "2001",
    "firstVersionYear": "2004",
    "designedBy": [
      "Мартин Одерски"
    ],
    "developer": [
      "Сообщество Scala",
      "EPFL"
    ],
    "designStyle": "Scala сочетает функциональное и объектно-ориентированное программирование, предоставляя мощные средства для абстракции и масштабирования кода.",
    "fileExtensions": {
      ".scala": "Основное расширение файлов исходного кода Scala.",
      ".sc": "Используется для скриптов Scala."
    },
    "paradigms": {
      "paradigms": [
        13,
        14,
        6,
        7,
        9,
        17,
        8
      ]
    },
    "typing": "Статическая, Сильная, Вывод типов",
    "useCases": [
      "Большие данные (Apache Spark)",
      "Веб-приложения",
      "Системы распределенных вычислений",
      "Аналитика данных"
    ],
    "compatibility": [
      "JVM",
      "JavaScript (Scala.js)",
      "Native platforms (Scala Native)"
    ],
    "popularFrameworks": [
      "Akka",
      "Play Framework",
      "Apache Spark",
      "Scalatra",
      "Finagle"
    ],
    "features": [
      "Функциональное программирование",
      "Объектно-ориентированное программирование",
      "Совместимость с Java",
      "Вывод типов",
      "Сопоставление с образцом"
    ],
    "prosAndCons": {
      "pros": [
        "Мощные возможности для абстракции",
        "Совместимость с существующей экосистемой Java",
        "Высокая производительность",
        "Активное сообщество"
      ],
      "cons": [
        "Крутая кривая обучения",
        "Медленная компиляция",
        "Меньшая экосистема по сравнению с Java"
      ]
    },
    "relatedLanguages": [
      "Java",
      "Kotlin",
      "Groovy",
      "Haskell"
    ],
    "ideSupport": [
      "IntelliJ IDEA",
      "Eclipse",
      "Visual Studio Code",
      "Scala IDE"
    ],
    "community": {
      "Scala Forums": "официальный форум для обсуждения языка.",
      "StackOverflow": "ключевой ресурс для вопросов и ответов по Scala.",
      "Reddit": "сообщество r/scala для обсуждений и новостей.",
      "Scala Days": "ежегодная конференция для разработчиков Scala."
    },
    "future": "Scala продолжает развиваться с выпуском Scala 3, который приносит улучшения в синтаксис и новые функциональные возможности. Ожидается дальнейший рост в областях больших данных и распределенных систем."
  },
  {
    "logo": "groovy",
    "name": "Groovy",
    "url": "https://groovy-lang.org",
    "description": "<bold>Groovy</bold> — это объектно-ориентированный язык программирования для платформы JVM, который предлагает лаконичный и динамический синтаксис. Groovy совместим с Java и используется для веб-разработки, скриптов и построения проектов.",
    "history": {
      "nameOrigin": "Название 'Groovy' выбрано для передачи ощущения 'классного' и удобного языка.",
      "developmentStart": "Разработка Groovy началась в 2003 году Джеймсом Страчаном и Бобом МакУиртером.",
      "firstRelease": "Первая стабильная версия Groovy 1.0 была выпущена в январе 2007 года."
    },
    "code": "<rkey>println</rkey> <rstr>'Hello, World!'</rstr>",
    "developmentStartYear": "2003",
    "firstVersionYear": "2007",
    "designedBy": [
      "Джеймс Страчен",
      "Боб МакУиртер"
    ],
    "developer": [
      "Apache Software Foundation"
    ],
    "designStyle": "Groovy сочетает в себе простоту и гибкость динамических языков с мощью платформы Java, предоставляя разработчикам лаконичный синтаксис и мощные возможности.",
    "fileExtensions": {
      ".groovy": "Основное расширение файлов исходного кода Groovy.",
      ".gvy": "Альтернативное расширение для файлов Groovy.",
      ".gy": "Альтернативное расширение для файлов Groovy.",
      ".gsh": "Скрипты для Groovy Shell."
    },
    "paradigms": {
      "paradigms": [
        13,
        14,
        6,
        9,
        17,
        18,
        8
      ]
    },
    "typing": "Статическая и динамическая, Сильная",
    "useCases": [
      "Скрипты и автоматизация",
      "Веб-приложения",
      "Тестирование",
      "Сборки проектов (Gradle)"
    ],
    "compatibility": [
      "JVM",
      "Android"
    ],
    "popularFrameworks": [
      "Grails",
      "Gradle",
      "Spock",
      "Ratpack",
      "Griffon"
    ],
    "features": [
      "Динамическая типизация",
      "Лаконичный синтаксис",
      "Совместимость с Java",
      "Метапрограммирование",
      "Поддержка функциональных стилей"
    ],
    "prosAndCons": {
      "pros": [
        "Быстрая разработка благодаря лаконичному синтаксису",
        "Полная совместимость с Java",
        "Отлично подходит для скриптов и автоматизации"
      ],
      "cons": [
        "Меньшая производительность по сравнению с Java",
        "Меньшая экосистема",
        "Может быть сложнее отлаживать из-за динамической типизации"
      ]
    },
    "relatedLanguages": [
      "Java",
      "Scala",
      "Kotlin",
      "Ruby"
    ],
    "ideSupport": [
      "IntelliJ IDEA",
      "Eclipse",
      "NetBeans",
      "Visual Studio Code"
    ],
    "community": {
      "Groovy Mailing Lists": "официальные списки рассылки для обсуждений.",
      "StackOverflow": "ключевой ресурс для вопросов и ответов по Groovy.",
      "Reddit": "сообщество r/groovy для обсуждений и новостей.",
      "ApacheCon": "конференция, посвященная проектам Apache, включая Groovy."
    },
    "future": "Groovy продолжает развиваться под эгидой Apache и остается популярным для скриптов, автоматизации и тестирования. Ожидается дальнейшая интеграция с экосистемой Java и улучшение инструментов."
  },
  {
    "logo": "swift",
    "name": "Swift",
    "url": "https://swift.org",
    "description": "<bold>Swift</bold> — это современный язык программирования общего назначения, разработанный компанией Apple Inc. Он предназначен для разработки приложений под iOS, macOS, watchOS и tvOS, обеспечивая высокую производительность и безопасность.",
    "history": {
      "nameOrigin": "Название 'Swift' означает 'быстрый', что отражает производительность и эффективность языка.",
      "developmentStart": "Разработка Swift началась в 2010 году под руководством Криса Латтнера в Apple.",
      "firstRelease": "Первая публичная версия Swift была представлена в 2014 году на WWDC."
    },
    "code": "<rkey>import</rkey> <rnum>Foundation</rnum>\n\n<rfunc>print</rfunc>(<rstr>\"Hello, World!\"</rstr>)",
    "developmentStartYear": "2010",
    "firstVersionYear": "2014",
    "designedBy": [
      "Крис Латтнер",
      "Apple Inc."
    ],
    "developer": [
      "Apple Inc.",
      "Сообщество Swift"
    ],
    "designStyle": "Swift сочетает в себе лучшие идеи из различных языков, предоставляя безопасный, быстрый и современный синтаксис для разработки приложений.",
    "fileExtensions": {
      ".swift": "Основное расширение файлов исходного кода Swift."
    },
    "paradigms": {
      "paradigms": [
        13,
        14,
        6,
        9,
        7,
        17,
        8
      ]
    },
    "typing": "Статическая, Сильная, Вывод типов",
    "useCases": [
      "Мобильные приложения (iOS)",
      "Настольные приложения (macOS)",
      "Приложения для watchOS и tvOS",
      "Серверная разработка",
      "Скрипты"
    ],
    "compatibility": [
      "iOS",
      "macOS",
      "watchOS",
      "tvOS",
      "Linux"
    ],
    "popularFrameworks": [
      "SwiftUI",
      "UIKit",
      "Combine",
      "Vapor",
      "Perfect"
    ],
    "features": [
      "Безопасность типов",
      "Опционалы для обработки null",
      "Высокая производительность",
      "Современный синтаксис",
      "Интероперабельность с Objective-C"
    ],
    "prosAndCons": {
      "pros": [
        "Высокая производительность",
        "Современный и понятный синтаксис",
        "Безопасность и надежность",
        "Поддержка Apple и открытый исходный код"
      ],
      "cons": [
        "Ограниченная кроссплатформенность",
        "Частые обновления могут вызывать проблемы совместимости",
        "Молодая экосистема по сравнению с Objective-C"
      ]
    },
    "relatedLanguages": [
      "Objective-C",
      "Kotlin",
      "Rust",
      "C#"
    ],
    "ideSupport": [
      "Xcode",
      "Visual Studio Code",
      "AppCode",
      "Atom"
    ],
    "community": {
      "Swift Forums": "официальный форум для обсуждения языка.",
      "StackOverflow": "ключевой ресурс для вопросов и ответов по Swift.",
      "Reddit": "сообщество r/swift для обсуждений и новостей.",
      "WWDC": "ежегодная конференция Apple, где анонсируются обновления Swift."
    },
    "future": "Swift продолжает активно развиваться, с улучшениями в производительности и расширением функциональности. Язык становится все более популярным для серверной разработки и, возможно, получит более широкую кроссплатформенную поддержку."
  },
  {
    "logo": "perl",
    "name": "Perl",
    "url": "https://www.perl.org",
    "description": "<bold>Perl</bold> — это высокоуровневый динамический язык программирования, известный своими мощными возможностями обработки текста и регулярными выражениями. Perl широко используется для веб-разработки, системного администрирования, сетевого программирования и многих других задач.",
    "history": {
      "nameOrigin": "Название 'Perl' изначально означало 'Practical Extraction and Report Language' (Практический язык извлечения и отчетов), хотя это скорее бэкроним. Ларри Уолл выбрал это имя, так как оно звучало приятно и не было уже занято.",
      "developmentStart": "Первая версия Perl была разработана Ларри Уоллом в 1987 году как средство для обработки текстовых файлов и генерации отчетов.",
      "firstRelease": "Perl 1.0 был выпущен в декабре 1987 года и быстро получил признание за свою гибкость и мощь."
    },
    "code": "<rkey>#!/usr/bin/perl</rkey>\n<rkey>print</rkey> <rstr>\"Hello, World!\\n\"</rstr>;",
    "developmentStartYear": "1987",
    "firstVersionYear": "1987",
    "designedBy": [
      "Ларри Уолл"
    ],
    "developer": [
      "Perl Community"
    ],
    "designStyle": "Perl объединяет в себе черты многих языков программирования, предоставляя разработчикам гибкие инструменты для решения разнообразных задач. Он поддерживает как процедурное, так и объектно-ориентированное программирование.",
    "fileExtensions": {
      ".pl": "Основное расширение файлов исходного кода Perl.",
      ".pm": "Perl-модули.",
      ".t": "Тестовые скрипты Perl."
    },
    "paradigms": {
      "paradigms": [
        13,
        6,
        9,
        14,
        18,
        5,
        17,
        8
      ]
    },
    "typing": "Динамическая, Слабая",
    "useCases": [
      "Обработка текста и файлов",
      "Системное администрирование",
      "Веб-разработка (CGI)",
      "Автоматизация",
      "Биоинформатика"
    ],
    "compatibility": [
      "Windows",
      "macOS",
      "Linux",
      "Unix"
    ],
    "popularFrameworks": [
      "Mojolicious",
      "Catalyst",
      "Dancer",
      "DBI",
      "PSGI/Plack"
    ],
    "features": [
      "Мощные регулярные выражения",
      "Гибкость синтаксиса",
      "Большое количество сторонних модулей (CPAN)",
      "Поддержка различных парадигм",
      "Быстрое прототипирование"
    ],
    "prosAndCons": {
      "pros": [
        "Высокая производительность при обработке текста",
        "Богатая экосистема модулей",
        "Гибкость и выразительность языка",
        "Кроссплатформенность"
      ],
      "cons": [
        "Код может быть трудно читаемым ('линейки')",
        "Устаревание в некоторых областях веб-разработки",
        "Меньшая популярность среди новых разработчиков"
      ]
    },
    "relatedLanguages": [
      "Ruby",
      "Python",
      "PHP",
      "Tcl"
    ],
    "ideSupport": [
      "Padre",
      "Visual Studio Code",
      "Sublime Text",
      "Atom",
      "vim"
    ],
    "community": {
      "Perl Mongers": "локальные группы пользователей Perl по всему миру.",
      "StackOverflow": "ключевой ресурс для вопросов и ответов по Perl.",
      "Reddit": "сообщество r/perl для обсуждений и новостей.",
      "The Perl Conference": "ежегодная конференция для разработчиков Perl."
    },
    "future": "Perl продолжает использоваться в различных областях, хотя его популярность снизилась с появлением новых языков. Разработка Perl 7 направлена на модернизацию языка и возвращение интереса сообщества."
  },
  {
    "logo": "fsharp",
    "name": "F#",
    "url": "https://fsharp.org",
    "description": "<bold>F#</bold> — это функциональный язык программирования общего назначения с поддержкой императивного и объектно-ориентированного стилей. Он работает на платформе .NET и предназначен для решения сложных вычислительных задач с помощью лаконичного и выразительного кода.",
    "history": {
      "nameOrigin": "Название 'F#' следует за традицией языков семейства ML (Meta Language) и указывает на функциональную природу языка.",
      "developmentStart": "F# был разработан Доном Саймом в Microsoft Research в начале 2000-х годов.",
      "firstRelease": "Первая версия F# была выпущена в 2005 году как исследовательский проект, а в 2010 году он стал полноценным языком на платформе .NET."
    },
    "code": "<rkey>printfn</rkey> <rstr>\"Hello, World!\"</rstr>",
    "developmentStartYear": "2005",
    "firstVersionYear": "2010",
    "designedBy": [
      "Дон Сайм"
    ],
    "developer": [
      "Microsoft",
      "F# Software Foundation"
    ],
    "designStyle": "F# сочетает функциональное программирование с возможностями .NET, предоставляя мощные средства для обработки данных, параллелизма и асинхронного программирования.",
    "fileExtensions": {
      ".fs": "Основное расширение файлов исходного кода F#.",
      ".fsx": "Скрипты F#.",
      ".fsi": "Файлы интерфейсов F#."
    },
    "paradigms": {
      "paradigms": [
        6,
        13,
        14,
        9,
        7,
        17,
        8
      ]
    },
    "typing": "Статическая, Сильная, Вывод типов",
    "useCases": [
      "Наука о данных",
      "Финансовое моделирование",
      "Аналитика",
      "Разработка веб-приложений",
      "Асинхронное программирование"
    ],
    "compatibility": [
      "Windows",
      "macOS",
      "Linux",
      ".NET Core",
      ".NET Framework"
    ],
    "popularFrameworks": [
      "ASP.NET Core",
      "SAFE Stack",
      "Akka.NET",
      "Fable",
      "Giraffe"
    ],
    "features": [
      "Функциональное программирование",
      "Вывод типов",
      "Неизменяемость данных",
      "Интеграция с .NET",
      "Асинхронное и параллельное программирование"
    ],
    "prosAndCons": {
      "pros": [
        "Лаконичный и выразительный код",
        "Высокая производительность",
        "Совместимость с экосистемой .NET",
        "Подходит для сложных вычислительных задач"
      ],
      "cons": [
        "Меньшая популярность по сравнению с C#",
        "Ограниченная поддержка инструментов",
        "Крутая кривая обучения для разработчиков, незнакомых с функциональным программированием"
      ]
    },
    "relatedLanguages": [
      "OCaml",
      "Haskell",
      "C#",
      "Scala"
    ],
    "ideSupport": [
      "Visual Studio",
      "Visual Studio Code",
      "Rider",
      "MonoDevelop"
    ],
    "community": {
      "F# Software Foundation": "официальная организация по продвижению F#.",
      "StackOverflow": "ключевой ресурс для вопросов и ответов по F#.",
      "Reddit": "сообщество r/fsharp для обсуждений и новостей.",
      "F# Conf": "мероприятия и конференции для разработчиков F#."
    },
    "future": "F# продолжает развиваться вместе с платформой .NET. Язык набирает популярность в областях аналитики данных и машинного обучения благодаря своей функциональной природе и совместимости с .NET."
  },
  {
    "logo": "vbnet",
    "name": "Visual Basic .NET",
    "url": "https://docs.microsoft.com/ru-ru/dotnet/visual-basic/",
    "description": "<bold>Visual Basic .NET</bold> — это объектно-ориентированный язык программирования от Microsoft, разработанный как преемник оригинального Visual Basic. Работает на платформе .NET и используется для разработки приложений под Windows, веб-приложений и сервисов.",
    "history": {
      "nameOrigin": "Название объединяет 'Visual Basic' с платформой '.NET', указывая на интеграцию с новой средой исполнения.",
      "developmentStart": "Visual Basic .NET был разработан в конце 1990-х — начале 2000-х годов как часть стратегии Microsoft по переходу на .NET Framework.",
      "firstRelease": "Первая версия Visual Basic .NET 7.0 была выпущена в 2002 году вместе с .NET Framework 1.0."
    },
    "code": "<rkey>Module</rkey> <rfunc>Program</rfunc>\n    <rkey>Sub</rkey> <rfunc>Main</rfunc>()\n        <rstatic>Console</rstatic>.<rfunc>WriteLine</rfunc>(<rstr>\"Hello, World!\"</rstr>)\n    <rkey>End Sub</rkey>\n<rkey>End Module</rkey>",
    "developmentStartYear": "2000",
    "firstVersionYear": "2002",
    "designedBy": [
      "Microsoft"
    ],
    "developer": [
      "Microsoft"
    ],
    "designStyle": "Visual Basic .NET разработан для простоты использования и обеспечивает легкий переход для разработчиков с классического Visual Basic на платформу .NET.",
    "fileExtensions": {
      ".vb": "Основное расширение файлов исходного кода Visual Basic .NET."
    },
    "paradigms": {
      "paradigms": [
        14,
        9,
        16,
        17,
        13,
        8
      ]
    },
    "typing": "Статическая, Сильная, Вывод типов",
    "useCases": [
      "Настольные приложения под Windows",
      "Веб-приложения (ASP.NET)",
      "Сервисные приложения",
      "Автоматизация Office"
    ],
    "compatibility": [
      "Windows",
      ".NET Framework",
      ".NET Core",
      ".NET 5+"
    ],
    "popularFrameworks": [
      "ASP.NET",
      "Windows Forms",
      "WPF",
      "Xamarin"
    ],
    "features": [
      "Простой и понятный синтаксис",
      "Интеграция с .NET",
      "Поддержка объектно-ориентированного программирования",
      "Автоматическое управление памятью",
      "Развитая интегрированная среда разработки (Visual Studio)"
    ],
    "prosAndCons": {
      "pros": [
        "Легкость изучения для начинающих",
        "Быстрая разработка приложений под Windows",
        "Интеграция с экосистемой Microsoft"
      ],
      "cons": [
        "Меньшая популярность по сравнению с C#",
        "Ограниченная кроссплатформенность",
        "Некоторые считают язык устаревшим"
      ]
    },
    "relatedLanguages": [
      "C#",
      "F#",
      "Delphi",
      "Java"
    ],
    "ideSupport": [
      "Visual Studio",
      "Visual Studio Code (ограниченно)"
    ],
    "community": {
      "Microsoft Developer Network": "официальные ресурсы и документация.",
      "StackOverflow": "ключевой ресурс для вопросов и ответов по VB.NET.",
      "Reddit": "сообщество r/visualbasic для обсуждений и новостей.",
      ".NET Conf": "мероприятия и конференции для разработчиков .NET."
    },
    "future": "Хотя Microsoft продолжает поддерживать Visual Basic .NET, основной фокус компании смещается в сторону C# и F#. Тем не менее, VB.NET остается актуальным для поддержки существующих приложений и разработки под Windows."
  },
  {
    "logo": "typescript",
    "name": "TypeScript",
    "url": "https://www.typescriptlang.org",
    "description": "<bold>TypeScript</bold> — это надмножество JavaScript с добавлением статической типизации и возможностей для разработки крупных приложений. Разработанный Microsoft, TypeScript компилируется в чистый JavaScript и может использоваться для разработки как клиентской, так и серверной части.",
    "history": {
      "nameOrigin": "Название 'TypeScript' отражает основной функционал языка — добавление типов ('Type') к JavaScript ('Script').",
      "developmentStart": "TypeScript был разработан в 2010-2012 годах под руководством Андерса Хейлсберга в Microsoft.",
      "firstRelease": "Первая версия TypeScript 0.8 была выпущена в октябре 2012 года."
    },
    "code": "<rkey>function</rkey> <rfunc>greet</rfunc>(name: <rnum>string</rnum>): <rnum>void</rnum> {\n    <rstatic>console</rstatic>.<func>log</func>(<rstr>`Hello, ${name}!`</rstr>);\n}\n\n<rfunc>greet</rfunc>(<rstr>'World'</rstr>);",
    "developmentStartYear": "2012",
    "firstVersionYear": "2012",
    "designedBy": [
      "Андерс Хейлсберг",
      "Microsoft"
    ],
    "developer": [
      "Microsoft"
    ],
    "designStyle": "TypeScript добавляет статическую типизацию и современные возможности ECMAScript, облегчая разработку и обслуживание крупных кодовых баз JavaScript.",
    "fileExtensions": {
      ".ts": "Основное расширение файлов исходного кода TypeScript.",
      ".tsx": "Используется для файлов с JSX-разметкой в React."
    },
    "paradigms": {
      "paradigms": [
        14,
        6,
        13,
        9,
        17,
        8
      ]
    },
    "typing": "Статическая, Сильная",
    "useCases": [
      "Веб-разработка (фронтенд)",
      "Серверная разработка (Node.js)",
      "Мобильные приложения (React Native)",
      "Разработка крупных проектов",
      "SPA-приложения"
    ],
    "compatibility": [
      "Браузеры (после компиляции в JS)",
      "Node.js",
      "Deno"
    ],
    "popularFrameworks": [
      "Angular",
      "React",
      "Vue.js",
      "NestJS",
      "Express"
    ],
    "features": [
      "Статическая типизация",
      "Поддержка современных стандартов ECMAScript",
      "Интерфейсы и обобщения",
      "Компиляция в чистый JavaScript",
      "Интеграция с инструментами разработки"
    ],
    "prosAndCons": {
      "pros": [
        "Улучшенная безопасность кода через типизацию",
        "Легкость интеграции в существующие проекты на JavaScript",
        "Поддержка со стороны Microsoft",
        "Упрощение разработки крупных приложений"
      ],
      "cons": [
        "Необходимость компиляции",
        "Дополнительная сложность для небольших проектов",
        "Зависимость от определения типов для сторонних библиотек"
      ]
    },
    "relatedLanguages": [
      "JavaScript",
      "Flow",
      "Dart",
      "CoffeeScript"
    ],
    "ideSupport": [
      "Visual Studio Code",
      "WebStorm",
      "Atom",
      "Sublime Text",
      "Visual Studio"
    ],
    "community": {
      "TypeScript Community": "официальные ресурсы и обсуждения.",
      "StackOverflow": "ключевой ресурс для вопросов и ответов по TypeScript.",
      "Reddit": "сообщество r/typescript для обсуждений и новостей.",
      "TypeScript Conf": "мероприятия и конференции для разработчиков TypeScript."
    },
    "future": "TypeScript продолжает набирать популярность, особенно в крупномасштабных проектах. С постоянным обновлением и интеграцией новых возможностей JavaScript, TypeScript остается актуальным инструментом для веб-разработчиков."
  },
  {
    "logo": "coffeescript",
    "name": "CoffeeScript",
    "url": "https://coffeescript.org",
    "description": "<bold>CoffeeScript</bold> — это язык программирования, который компилируется в JavaScript. Он предоставляет более лаконичный и читаемый синтаксис, упрощая разработку веб-приложений.",
    "history": {
      "nameOrigin": "Название 'CoffeeScript' выбрано для передачи ощущения свежести и бодрости, ассоциируемых с кофе.",
      "developmentStart": "CoffeeScript был разработан в 2009 году Джереми Эшкенасом.",
      "firstRelease": "Первая версия была выпущена в декабре 2009 года, а стабильная версия 1.0 — в декабре 2010 года."
    },
    "code": "<rfunc>greet</rfunc> = (name) ->\n  <rstatic>console</rstatic>.<rfunc>log</rfunc> <rstr>`Hello, ${name}!`</rstr>\n\n<rfunc>greet</rfunc> <rstr>'World'</rstr>",
    "developmentStartYear": "2009",
    "firstVersionYear": "2010",
    "designedBy": [
      "Джереми Эшкенас"
    ],
    "developer": [
      "Сообщество CoffeeScript"
    ],
    "designStyle": "CoffeeScript стремится улучшить JavaScript, предоставляя более краткий и выразительный синтаксис, вдохновленный языками Ruby и Python.",
    "fileExtensions": {
      ".coffee": "Основное расширение файлов исходного кода CoffeeScript.",
      ".litcoffee": "Literate CoffeeScript, объединяющий код и документацию."
    },
    "paradigms": {
      "paradigms": [
        6,
        14,
        13,
        9,
        17,
        18,
        8
      ]
    },
    "typing": "Динамическая, Уткиная типизация",
    "useCases": [
      "Веб-разработка",
      "Скрипты для Node.js",
      "Быстрое прототипирование",
      "Обработка данных"
    ],
    "compatibility": [
      "Браузеры (после компиляции)",
      "Node.js"
    ],
    "popularFrameworks": [
      "Rails (через интеграцию)",
      "Brunch",
      "Grunt",
      "Gulp"
    ],
    "features": [
      "Лаконичный синтаксис",
      "Легкая компиляция в JavaScript",
      "Синтаксический сахар для функций и классов",
      "Поддержка современных возможностей JavaScript"
    ],
    "prosAndCons": {
      "pros": [
        "Более короткий и читаемый код",
        "Быстрая компиляция",
        "Совместимость с экосистемой JavaScript"
      ],
      "cons": [
        "Необходимость компиляции",
        "Меньшая популярность в настоящее время",
        "Возможные сложности при отладке"
      ]
    },
    "relatedLanguages": [
      "JavaScript",
      "TypeScript",
      "Dart",
      "Ruby"
    ],
    "ideSupport": [
      "Visual Studio Code",
      "WebStorm",
      "Atom",
      "Sublime Text"
    ],
    "community": {
      "CoffeeScript GitHub": "официальный репозиторий и обсуждения.",
      "StackOverflow": "ключевой ресурс для вопросов и ответов по CoffeeScript.",
      "Reddit": "сообщество r/CoffeeScript для обсуждений и новостей."
    },
    "future": "Популярность CoffeeScript снизилась с появлением ES6 и TypeScript, которые предоставляют многие из его возможностей. Однако язык все еще используется в некоторых проектах и поддерживается сообществом."
  },
  {
    "logo": "dart",
    "name": "Dart",
    "url": "https://dart.dev",
    "description": "<bold>Dart</bold> — это язык программирования от Google, предназначенный для создания веб, серверных и мобильных приложений. Dart компилируется в нативный код или JavaScript, что позволяет создавать высокопроизводительные приложения.",
    "history": {
      "nameOrigin": "Название 'Dart' выбрано для передачи идеи скорости и точности, как при метании дротика ('dart' по-английски).",
      "developmentStart": "Разработка Dart началась в 2010 году в Google под руководством Ларса Бак и Каспера Лунд.",
      "firstRelease": "Первая версия Dart была представлена в октябре 2011 года на конференции GOTO в Дании."
    },
    "code": "<rkey>void</rkey> <rfunc>main</rfunc>() {\n  <rfunc>print</rfunc>(<rstr>'Hello, World!'</rstr>);\n}",
    "developmentStartYear": "2010",
    "firstVersionYear": "2011",
    "designedBy": [
      "Ларс Бак",
      "Каспер Лунд"
    ],
    "developer": [
      "Google"
    ],
    "designStyle": "Dart разработан для разработки клиентских приложений с высокой производительностью. Он поддерживает объектно-ориентированное программирование с классами и наследованием.",
    "fileExtensions": {
      ".dart": "Основное расширение файлов исходного кода Dart."
    },
    "paradigms": {
      "paradigms": [
        14,
        6,
        13,
        9,
        17,
        8
      ]
    },
    "typing": "Статическая и динамическая, Сильная, Вывод типов",
    "useCases": [
      "Мобильные приложения (Flutter)",
      "Веб-приложения",
      "Серверные приложения",
      "Командные утилиты"
    ],
    "compatibility": [
      "iOS",
      "Android",
      "Web",
      "Desktop (Windows, macOS, Linux)"
    ],
    "popularFrameworks": [
      "Flutter",
      "AngularDart",
      "Aqueduct",
      "Dart Frog",
      "GetX"
    ],
    "features": [
      "Кроссплатформенность",
      "Высокая производительность",
      "Асинхронное программирование",
      "Поддержка JIT и AOT компиляции",
      "Современный синтаксис"
    ],
    "prosAndCons": {
      "pros": [
        "Единый язык для фронтенда и мобильной разработки",
        "Интеграция с Flutter",
        "Быстрая разработка и горячая перезагрузка"
      ],
      "cons": [
        "Меньшая популярность вне экосистемы Flutter",
        "Ограниченная экосистема по сравнению с JavaScript",
        "Необходимость изучения нового языка для разработчиков"
      ]
    },
    "relatedLanguages": [
      "JavaScript",
      "TypeScript",
      "Kotlin",
      "Swift"
    ],
    "ideSupport": [
      "Visual Studio Code",
      "Android Studio",
      "IntelliJ IDEA"
    ],
    "community": {
      "Dart Community": "официальные ресурсы и обсуждения.",
      "StackOverflow": "ключевой ресурс для вопросов и ответов по Dart.",
      "Reddit": "сообщество r/dartlang для обсуждений и новостей.",
      "Dart Conf": "мероприятия и конференции для разработчиков Dart."
    },
    "future": "С развитием Flutter, Dart получает все большее распространение в мобильной разработке. Ожидается дальнейшее улучшение производительности и расширение экосистемы."
  },
  {
    "logo": "objective-c",
    "name": "Objective-C",
    "url": "https://developer.apple.com/documentation/objectivec",
    "description": "<bold>Objective-C</bold> — это объектно-ориентированный язык программирования, являющийся расширением языка C, с добавлением сообщений из Smalltalk. Он долгое время был основным языком для разработки приложений под macOS и iOS.",
    "history": {
      "nameOrigin": "Название 'Objective-C' указывает на добавление объектно-ориентированных возможностей к языку C.",
      "developmentStart": "Objective-C был разработан в начале 1980-х годов Брэдом Коксом и Томом Лавом в компании Stepstone.",
      "firstRelease": "Первая реализация Objective-C была выпущена в начале 1980-х годов, а в конце 1980-х язык был лицензирован NeXT (компания Стива Джобса)."
    },
    "code": "<rkey>#import</rkey> <rstr><Foundation/Foundation.h></rstr>\n\n<rkey>int</rkey> <rfunc>main</rfunc>(<rkey>int</rkey> argc, <rkey>const char</rkey> * argv[]) {\n    <rstatic>@autoreleasepool</rstatic> {\n        <rfunc>NSLog</rfunc>(<rstr>@\"Hello, World!\"</rstr>);\n    }\n    <rkey>return</rkey> <rnum>0</rnum>;\n}",
    "developmentStartYear": "1984",
    "firstVersionYear": "1984",
    "designedBy": [
      "Брэд Кокс",
      "Том Лав"
    ],
    "developer": [
      "Apple Inc."
    ],
    "designStyle": "Objective-C сочетает в себе синтаксис и возможности C с объектно-ориентированными концепциями из Smalltalk, предоставляя гибкие возможности для разработки.",
    "fileExtensions": {
      ".m": "Основное расширение файлов исходного кода Objective-C.",
      ".h": "Заголовочные файлы.",
      ".mm": "Файлы Objective-C++, содержащие код на C++."
    },
    "paradigms": {
      "paradigms": [
        14,
        9,
        13,
        17,
        8
      ]
    },
    "typing": "Статическая и динамическая, Сильная",
    "useCases": [
      "Мобильные приложения (iOS)",
      "Настольные приложения (macOS)",
      "Разработка фреймворков",
      "Системное программирование на платформах Apple"
    ],
    "compatibility": [
      "iOS",
      "macOS",
      "watchOS",
      "tvOS"
    ],
    "popularFrameworks": [
      "Cocoa",
      "Cocoa Touch",
      "Foundation",
      "UIKit",
      "AFNetworking"
    ],
    "features": [
      "Объектно-ориентированное программирование",
      "Динамическая отправка сообщений",
      "Интероперабельность с C и C++",
      "Категории и протоколы",
      "Использование Runtime"
    ],
    "prosAndCons": {
      "pros": [
        "Глубокая интеграция с платформами Apple",
        "Высокая производительность",
        "Мощные возможности через Runtime"
      ],
      "cons": [
        "Более сложный и вербозный синтаксис",
        "Меньшая популярность с появлением Swift",
        "Крутая кривая обучения для новых разработчиков"
      ]
    },
    "relatedLanguages": [
      "C",
      "C++",
      "Swift",
      "Smalltalk"
    ],
    "ideSupport": [
      "Xcode"
    ],
    "community": {
      "Apple Developer": "официальные ресурсы и документация.",
      "StackOverflow": "ключевой ресурс для вопросов и ответов по Objective-C.",
      "Reddit": "сообщество r/ObjectiveC для обсуждений и новостей.",
      "WWDC": "конференция, где обсуждаются технологии Apple, включая Objective-C."
    },
    "future": "С появлением Swift, Objective-C постепенно отходит на второй план, но остается важным для поддержки существующих приложений и фреймворков. Apple продолжает поддерживать язык, но основной фокус смещается в сторону Swift."
  },
  {
    "logo": "smalltalk",
    "name": "Smalltalk",
    "url": "http://www.smalltalk.org",
    "description": "<bold>Smalltalk</bold> — это объектно-ориентированный, динамический язык программирования, известный своим простым синтаксисом и влиянием на развитие ООП. Smalltalk считается одним из первых полностью объектно-ориентированных языков и повлиял на многие современные языки.",
    "history": {
      "nameOrigin": "Название 'Smalltalk' было выбрано, чтобы подчеркнуть простоту и легкость общения с компьютером через этот язык.",
      "developmentStart": "Smalltalk был разработан в 1970-х годах Аланом Кеем, Дэном Ингаллсом и Адель Голдберг в Xerox PARC.",
      "firstRelease": "Первая версия, Smalltalk-72, была выпущена в 1972 году, а наиболее известная версия, Smalltalk-80, — в 1980 году."
    },
    "code": "<rfunc>'Hello, World!'</rfunc> <rkey>displayNl</rkey>",
    "developmentStartYear": "1972",
    "firstVersionYear": "1972",
    "designedBy": [
      "Алан Кей",
      "Дэн Ингаллс",
      "Адель Голдберг"
    ],
    "developer": [
      "Сообщество Smalltalk"
    ],
    "designStyle": "Smalltalk основан на концепции, что все является объектом. Язык предоставляет простой синтаксис и мощные средства для метапрограммирования.",
    "fileExtensions": {
      ".st": "Основное расширение файлов исходного кода Smalltalk."
    },
    "paradigms": {
      "paradigms": [
        14,
        13,
        17,
        18,
        8
      ]
    },
    "typing": "Динамическая, Сильная",
    "useCases": [
      "Образование",
      "Прототипирование",
      "Разработка графических интерфейсов",
      "Исследовательские проекты"
    ],
    "compatibility": [
      "Кроссплатформенный (зависит от реализации)"
    ],
    "popularFrameworks": [
      "Seaside",
      "Pharo",
      "Squeak",
      "VisualWorks"
    ],
    "features": [
      "Полное объектно-ориентированное программирование",
      "Простой и консистентный синтаксис",
      "Интегрированная среда разработки",
      "Метапрограммирование",
      "Графические интерфейсы"
    ],
    "prosAndCons": {
      "pros": [
        "Чистота объектно-ориентированной модели",
        "Простота и консистентность языка",
        "Мощные возможности для метапрограммирования"
      ],
      "cons": [
        "Меньшая популярность в настоящее время",
        "Ограниченная экосистема",
        "Может быть непривычен для разработчиков современных языков"
      ]
    },
    "relatedLanguages": [
      "Ruby",
      "Objective-C",
      "Python",
      "Elixir"
    ],
    "ideSupport": [
      "Pharo",
      "Squeak",
      "VisualWorks",
      "Dolphin Smalltalk"
    ],
    "community": {
      "Smalltalk.org": "официальные ресурсы и документация.",
      "StackOverflow": "ключевой ресурс для вопросов и ответов по Smalltalk.",
      "Reddit": "сообщество r/Smalltalk для обсуждений и новостей.",
      "Smalltalk Events": "мероприятия и конференции для разработчиков Smalltalk."
    },
    "future": "Smalltalk продолжает использоваться в нишевых областях и образовательных целях. Его идеи продолжают влиять на разработку новых языков и парадигм программирования."
  },
  {
    "logo": "elixir",
    "name": "Elixir",
    "url": "https://elixir-lang.org",
    "description": "<bold>Elixir</bold> — это функциональный, конкурентный язык программирования, работающий на виртуальной машине Erlang (BEAM). Он предназначен для создания масштабируемых и поддерживаемых приложений с высокой доступностью.",
    "history": {
      "nameOrigin": "Название 'Elixir' выбрано для передачи идеи средства, способного решать сложные задачи в программировании.",
      "developmentStart": "Elixir был создан в 2011 году Хосе Валимом, бывшим участником команды Ruby on Rails.",
      "firstRelease": "Первая стабильная версия Elixir 1.0 была выпущена в сентябре 2014 года."
    },
    "code": "<rfunc>IO.puts</rfunc> <rstr>'Hello, World!'</rstr>",
    "developmentStartYear": "2011",
    "firstVersionYear": "2014",
    "designedBy": [
      "Хосе Валим"
    ],
    "developer": [
      "Сообщество Elixir"
    ],
    "designStyle": "Elixir сочетает в себе синтаксис, похожий на Ruby, с мощью и производительностью Erlang, предоставляя инструменты для создания распределенных и отказоустойчивых систем.",
    "fileExtensions": {
      ".ex": "Основное расширение файлов исходного кода Elixir.",
      ".exs": "Скрипты Elixir."
    },
    "paradigms": {
      "paradigms": [
        6,
        13,
        15,
        17,
        8
      ]
    },
    "typing": "Динамическая, Сильная",
    "useCases": [
      "Веб-разработка",
      "Реалтайм приложения",
      "Масштабируемые системы",
      "Микросервисы",
      "Чат-приложения"
    ],
    "compatibility": [
      "Кроссплатформенный (через Erlang VM)"
    ],
    "popularFrameworks": [
      "Phoenix",
      "Nerves",
      "Absinthe",
      "Ecto",
      "Plug"
    ],
    "features": [
      "Функциональное программирование",
      "Масштабируемость и конкурентность",
      "Отказоустойчивость",
      "Метапрограммирование через макросы",
      "Интерактивная оболочка (IEx)"
    ],
    "prosAndCons": {
      "pros": [
        "Высокая производительность в конкурентных задачах",
        "Отличная масштабируемость",
        "Современный и понятный синтаксис",
        "Активное и дружелюбное сообщество"
      ],
      "cons": [
        "Крутая кривая обучения для новичков",
        "Меньшая экосистема по сравнению с более популярными языками",
        "Зависимость от виртуальной машины Erlang"
      ]
    },
    "relatedLanguages": [
      "Erlang",
      "Ruby",
      "Haskell",
      "Clojure"
    ],
    "ideSupport": [
      "Visual Studio Code",
      "IntelliJ IDEA (с плагинами)",
      "Atom",
      "vim"
    ],
    "community": {
      "Elixir Forum": "официальный форум для обсуждения языка.",
      "StackOverflow": "ключевой ресурс для вопросов и ответов по Elixir.",
      "Reddit": "сообщество r/elixir для обсуждений и новостей.",
      "ElixirConf": "ежегодная конференция для разработчиков Elixir."
    },
    "future": "Elixir продолжает расти в популярности, особенно в областях, требующих высокой производительности и масштабируемости. С развитием экосистемы и инструментов ожидается дальнейшее распространение языка."
  },
  {
    "logo": "haskell",
    "name": "Haskell",
    "url": "https://www.haskell.org",
    "description": "<bold>Haskell</bold> — это чисто функциональный язык программирования с ленивыми вычислениями, известный своей строгой статической типизацией и поддержкой высокоуровневых абстракций. Он используется для обучения, научных исследований и разработки промышленного ПО.",
    "history": {
      "nameOrigin": "Язык назван в честь Хаскела Карри, американского математика и логика, внесшего значительный вклад в комбиниаторную логику.",
      "developmentStart": "Разработка Haskell началась в 1987 году группой исследователей, стремившихся создать стандарт для функциональных языков с ленивыми вычислениями.",
      "firstRelease": "Первая версия спецификации Haskell 1.0 была опубликована в 1990 году."
    },
    "code": "<rkey>main</rkey> = <rfunc>putStrLn</rfunc> <rstr>\"Hello, World!\"</rstr>",
    "developmentStartYear": "1987",
    "firstVersionYear": "1990",
    "designedBy": [
      "Комитет по Haskell"
    ],
    "developer": [
      "Сообщество Haskell"
    ],
    "designStyle": "Haskell спроектирован как чисто функциональный язык с ленивыми вычислениями и строгой статической типизацией, позволяющий создавать высоконадежные и корректные программы.",
    "fileExtensions": {
      ".hs": "Основное расширение файлов исходного кода Haskell.",
      ".lhs": "Литературные программы на Haskell."
    },
    "paradigms": {
      "paradigms": [
        6,
        13,
        8,
        9,
        7
      ]
    },
    "typing": "Статическая, Сильная, Вывод типов",
    "useCases": [
      "Научные исследования",
      "Компиляторы и интерпретаторы",
      "Финансовое программирование",
      "Веб-разработка",
      "Обработка данных"
    ],
    "compatibility": [
      "Windows",
      "macOS",
      "Linux",
      "Unix"
    ],
    "popularFrameworks": [
      "Yesod",
      "Snap",
      "Happstack",
      "Scotty",
      "Servant"
    ],
    "features": [
      "Чисто функциональное программирование",
      "Ленивые вычисления",
      "Модульная система типов",
      "Вывод типов",
      "Монады"
    ],
    "prosAndCons": {
      "pros": [
        "Высокая надежность и корректность программ",
        "Мощная система типов",
        "Поддержка абстракций высокого уровня",
        "Ленивые вычисления позволяют создавать эффективные алгоритмы"
      ],
      "cons": [
        "Крутая кривая обучения",
        "Меньшая экосистема библиотек по сравнению с другими языками",
        "Может быть сложно интегрировать с императивным кодом"
      ]
    },
    "relatedLanguages": [
      "OCaml",
      "Scala",
      "F#",
      "Erlang"
    ],
    "ideSupport": [
      "Visual Studio Code",
      "IntelliJ IDEA (с плагинами)",
      "Atom",
      "Emacs",
      "vim"
    ],
    "community": {
      "Haskell Mailing Lists": "официальные списки рассылки для обсуждений.",
      "StackOverflow": "ключевой ресурс для вопросов и ответов по Haskell.",
      "Reddit": "сообщество r/haskell для обсуждений и новостей.",
      "Haskell Symposium": "ежегодная конференция по Haskell."
    },
    "future": "Haskell продолжает использоваться в научных исследованиях и промышленном программировании, особенно в областях, требующих высокой надежности. Развитие языка продолжается, с акцентом на производительности и удобстве использования."
  },
  {
    "logo": "tcl",
    "name": "Tcl",
    "url": "https://www.tcl.tk",
    "description": "<bold>Tcl</bold> (Tool Command Language) — это интерпретируемый динамический язык программирования, предназначенный для быстрого создания скриптов и прототипирования. Часто используется в сочетании с Tk для разработки графических интерфейсов.",
    "history": {
      "nameOrigin": "Название 'Tcl' расшифровывается как 'Tool Command Language', что подчеркивает его предназначение для управления инструментами и приложениями.",
      "developmentStart": "Tcl был разработан в конце 1980-х годов Джоном Оустерхаутом в Калифорнийском университете в Беркли.",
      "firstRelease": "Первая версия Tcl была выпущена в 1988 году."
    },
    "code": "<rkey>puts</rkey> <rstr>\"Hello, World!\"</rstr>",
    "developmentStartYear": "1988",
    "firstVersionYear": "1988",
    "designedBy": [
      "Джон Оустерхаут"
    ],
    "developer": [
      "Tcl Community"
    ],
    "designStyle": "Tcl разработан как простой и расширяемый язык скриптов, легко встраиваемый в приложения и предоставляющий мощные возможности для создания графических интерфейсов.",
    "fileExtensions": {
      ".tcl": "Основное расширение файлов исходного кода Tcl.",
      ".tk": "Скрипты для Tk."
    },
    "paradigms": {
      "paradigms": [
        18,
        5,
        9,
        13,
        8
      ]
    },
    "typing": "Динамическая, Слабая",
    "useCases": [
      "Скрипты и автоматизация",
      "Тестирование",
      "Встроенные системы",
      "Графические интерфейсы (через Tk)",
      "Управление приложениями"
    ],
    "compatibility": [
      "Windows",
      "macOS",
      "Linux",
      "Unix"
    ],
    "popularFrameworks": [
      "Tk",
      "Expect",
      "Tcllib",
      "NSCL-Tcl",
      "Oratcl"
    ],
    "features": [
      "Легко встраивается в приложения",
      "Простой синтаксис",
      "Мощная поддержка строковых операций",
      "Динамическая типизация",
      "Поддержка расширений"
    ],
    "prosAndCons": {
      "pros": [
        "Быстрое прототипирование",
        "Легкость изучения",
        "Хорошо подходит для создания GUI",
        "Широкие возможности расширения"
      ],
      "cons": [
        "Меньшая популярность в настоящее время",
        "Ограниченная производительность",
        "Меньшая экосистема по сравнению с другими языками"
      ]
    },
    "relatedLanguages": [
      "Python",
      "Perl",
      "Lua",
      "Ruby"
    ],
    "ideSupport": [
      "Visual Studio Code",
      "Komodo Edit",
      "vim",
      "Emacs"
    ],
    "community": {
      "Tcl Core Mailing List": "официальные списки рассылки для обсуждений.",
      "StackOverflow": "ключевой ресурс для вопросов и ответов по Tcl.",
      "Reddit": "сообщество r/Tcl для обсуждений и новостей.",
      "Tcl Conferences": "мероприятия и конференции для разработчиков Tcl."
    },
    "future": "Tcl продолжает использоваться в нишевых областях и для специфических задач, таких как автоматизация и тестирование. Разработка языка продолжается, хотя его популярность снизилась с появлением новых языков."
  },
  {
    "logo": "ocaml",
    "name": "OCaml",
    "url": "https://ocaml.org",
    "description": "<bold>OCaml</bold> — это статически типизированный функциональный язык программирования с поддержкой императивного и объектно-ориентированного стилей. Он известен своей эффективностью и мощной системой типов.",
    "history": {
      "nameOrigin": "Название 'OCaml' происходит от 'Objective Caml', где 'Caml' — это 'Categorical Abstract Machine Language', а 'Objective' указывает на добавление объектно-ориентированных возможностей.",
      "developmentStart": "OCaml был разработан в середине 1990-х годов в INRIA во Франции на основе языка Caml.",
      "firstRelease": "Первая версия OCaml была выпущена в 1996 году."
    },
    "code": "<rkey>print_endline</rkey> <rstr>\"Hello, World!\"</rstr>",
    "developmentStartYear": "1996",
    "firstVersionYear": "1996",
    "designedBy": [
      "Xavier Leroy",
      "INRIA"
    ],
    "developer": [
      "INRIA",
      "Сообщество OCaml"
    ],
    "designStyle": "OCaml сочетает функциональное программирование с императивными и объектно-ориентированными возможностями, предоставляя мощную систему типов с выводом типов и модульностью.",
    "fileExtensions": {
      ".ml": "Основное расширение файлов исходного кода OCaml.",
      ".mli": "Файлы интерфейсов OCaml."
    },
    "paradigms": {
      "paradigms": [
        6,
        13,
        14,
        9,
        7,
        8
      ]
    },
    "typing": "Статическая, Сильная, Вывод типов",
    "useCases": [
      "Компиляторы и интерпретаторы",
      "Финансовое программирование",
      "Системное программирование",
      "Научные исследования",
      "Веб-разработка"
    ],
    "compatibility": [
      "Windows",
      "macOS",
      "Linux",
      "Unix"
    ],
    "popularFrameworks": [
      "Ocsigen",
      "ReasonML",
      "Jane Street Core",
      "Coq",
      "Dune"
    ],
    "features": [
      "Мощная система типов",
      "Вывод типов",
      "Функциональное и объектно-ориентированное программирование",
      "Высокая производительность",
      "Модульность"
    ],
    "prosAndCons": {
      "pros": [
        "Высокая надежность кода",
        "Эффективность и производительность",
        "Мощные абстракции",
        "Вывод типов упрощает код"
      ],
      "cons": [
        "Крутая кривая обучения",
        "Меньшая экосистема библиотек",
        "Ограниченная популярность"
      ]
    },
    "relatedLanguages": [
      "Haskell",
      "F#",
      "SML",
      "Scala"
    ],
    "ideSupport": [
      "Visual Studio Code",
      "Emacs",
      "vim",
      "IntelliJ IDEA (с плагинами)"
    ],
    "community": {
      "OCaml Discuss": "официальные форумы для обсуждений.",
      "StackOverflow": "ключевой ресурс для вопросов и ответов по OCaml.",
      "Reddit": "сообщество r/ocaml для обсуждений и новостей.",
      "OCaml Workshop": "ежегодная конференция по OCaml."
    },
    "future": "OCaml продолжает развиваться и используется в некоторых компаниях, особенно в финансовом секторе. С появлением ReasonML и других проектов интерес к OCaml может возрасти."
  },
  {
    "logo": "delphi",
    "name": "Delphi",
    "url": "https://www.embarcadero.com/products/delphi",
    "description": "<bold>Delphi</bold> — это интегрированная среда разработки (IDE) для языка программирования Object Pascal, разработанная для создания приложений под Windows, macOS, iOS и Android. Delphi известен своими возможностями быстрой разработки визуальных приложений.",
    "history": {
      "nameOrigin": "Название 'Delphi' было выбрано в честь греческого оракула в Дельфах, символизируя мудрость и знание.",
      "developmentStart": "Delphi был разработан в 1995 году компанией Borland как преемник Turbo Pascal.",
      "firstRelease": "Первая версия Delphi 1.0 была выпущена в 1995 году."
    },
    "code": "<rkey>program</rkey> <rfunc>HelloWorld</rfunc>;\n<rkey>begin</rkey>\n  <rfunc>WriteLn</rfunc>(<rstr>'Hello, World!'</rstr>);\n<rkey>end</rkey>.",
    "developmentStartYear": "1995",
    "firstVersionYear": "1995",
    "designedBy": [
      "Андерс Хейлсберг",
      "Borland"
    ],
    "developer": [
      "Embarcadero Technologies"
    ],
    "designStyle": "Delphi предоставляет объектно-ориентированный язык Object Pascal с богатой визуальной средой разработки, позволяя быстро создавать приложения с графическим интерфейсом.",
    "fileExtensions": {
      ".pas": "Основное расширение файлов исходного кода Object Pascal.",
      ".dpr": "Файлы проектов Delphi.",
      ".dfm": "Файлы форм Delphi."
    },
    "paradigms": {
      "paradigms": [
        14,
        9,
        16,
        13,
        8
      ]
    },
    "typing": "Статическая, Сильная",
    "useCases": [
      "Настольные приложения под Windows",
      "Мобильные приложения",
      "Базы данных",
      "Встроенные системы",
      "Серверные приложения"
    ],
    "compatibility": [
      "Windows",
      "macOS",
      "iOS",
      "Android",
      "Linux (через FMX Linux)"
    ],
    "popularFrameworks": [
      "VCL (Visual Component Library)",
      "FireMonkey",
      "DataSnap",
      "UniGUI",
      "IntraWeb"
    ],
    "features": [
      "Быстрая разработка приложений",
      "Богатый набор визуальных компонентов",
      "Кроссплатформенная разработка",
      "Интеграция с базами данных",
      "Объектно-ориентированное программирование"
    ],
    "prosAndCons": {
      "pros": [
        "Высокая производительность приложений",
        "Быстрая разработка с визуальными инструментами",
        "Большое количество компонентов и библиотек",
        "Поддержка кроссплатформенности"
      ],
      "cons": [
        "Закрытая среда разработки",
        "Стоимость лицензии",
        "Меньшая популярность в настоящее время",
        "Ограниченная поддержка со стороны сообщества"
      ]
    },
    "relatedLanguages": [
      "Pascal",
      "C#",
      "Java",
      "C++"
    ],
    "ideSupport": [
      "Delphi IDE",
      "Lazarus (для Free Pascal)"
    ],
    "community": {
      "Embarcadero Community": "официальные ресурсы и форумы.",
      "StackOverflow": "ключевой ресурс для вопросов и ответов по Delphi.",
      "Reddit": "сообщество r/delphi для обсуждений и новостей.",
      "Delphi Developer Days": "мероприятия и конференции для разработчиков Delphi."
    },
    "future": "Delphi продолжает использоваться для разработки корпоративных и настольных приложений. Embarcadero продолжает развивать платформу, добавляя новые возможности и улучшения, хотя конкуренция с другими инструментами и языками остается сильной."
  },
  {
    "logo": "flow",
    "name": "Flow",
    "url": "https://flow.org",
    "description": "<bold>Flow</bold> — это статический анализатор типов для JavaScript, разработанный Facebook. Он позволяет добавлять статическую типизацию в JavaScript-код для обнаружения ошибок на этапе разработки.",
    "history": {
      "nameOrigin": "Название 'Flow' отражает идею плавного потока разработки с помощью статической типизации.",
      "developmentStart": "Flow был разработан Facebook и впервые представлен в 2014 году.",
      "firstRelease": "Первая публичная версия Flow была выпущена в ноябре 2014 года."
    },
    "code": "<rkey>// @flow</rkey>\n\n<rkey>function</rkey> <rfunc>greet</rfunc>(name: <rnum>string</rnum>): <rnum>void</rnum> {\n  <rstatic>console</rstatic>.<rfunc>log</rfunc>(<rstr>`Hello, </rstr><rkey>${</rkey>name<rkey>}</rkey><rstr>!`</rstr>);\n}\n\n<rfunc>greet</rfunc>(<rstr>\"World\"</rstr>);",
    "developmentStartYear": "2014",
    "firstVersionYear": "2014",
    "designedBy": [
      "Facebook"
    ],
    "developer": [
      "Facebook"
    ],
    "designStyle": "Flow добавляет статическую типизацию в JavaScript, позволяя обнаруживать ошибки типов во время разработки без изменения исполнения кода.",
    "fileExtensions": {
      ".js": "JavaScript-файлы с аннотациями типов Flow.",
      ".jsx": "React JSX-файлы с аннотациями типов Flow."
    },
    "paradigms": {
      "paradigms": [
        14,
        6,
        13,
        9,
        17,
        8
      ]
    },
    "typing": "Статическая (через аннотации), Сильная",
    "useCases": [
      "Веб-разработка (фронтенд)",
      "Большие проекты на JavaScript",
      "React-приложения",
      "Снижение ошибок типов"
    ],
    "compatibility": [
      "Браузеры (после компиляции)",
      "Node.js"
    ],
    "popularFrameworks": [
      "React",
      "Relay",
      "Express (с аннотациями Flow)"
    ],
    "features": [
      "Статическая типизация для JavaScript",
      "Вывод типов",
      "Интеграция с инструментами разработки",
      "Быстрый анализ кода",
      "Поддержка современных стандартов JavaScript"
    ],
    "prosAndCons": {
      "pros": [
        "Обнаружение ошибок на ранних этапах",
        "Улучшенная безопасность кода",
        "Легкая интеграция в существующие проекты",
        "Разработка при поддержке Facebook"
      ],
      "cons": [
        "Дополнительная настройка и инструменты",
        "Конкуренция с TypeScript",
        "Меньшая популярность и поддержка сообщества"
      ]
    },
    "relatedLanguages": [
      "JavaScript",
      "TypeScript",
      "Reason",
      "CoffeeScript"
    ],
    "ideSupport": [
      "Visual Studio Code",
      "Atom",
      "WebStorm",
      "Nuclide"
    ],
    "community": {
      "Flow Community": "официальные ресурсы и обсуждения.",
      "StackOverflow": "ключевой ресурс для вопросов и ответов по Flow.",
      "Reddit": "сообщество r/flowtype для обсуждений и новостей."
    },
    "future": "С ростом популярности TypeScript использование Flow несколько снизилось. Однако он продолжает использоваться в проектах Facebook и некоторых других компаниях. Развитие продолжается, хотя конкуренция с TypeScript остается серьезным вызовом."
  },
  {
    "logo": "erlang",
    "name": "Erlang",
    "url": "https://www.erlang.org",
    "description": "<bold>Erlang</bold> — это функциональный язык программирования и параллельная вычислительная система, разработанная для создания масштабируемых и отказоустойчивых систем в реальном времени. Часто используется в телекоммуникациях, мессенджерах и распределенных системах.",
    "history": {
      "nameOrigin": "Название 'Erlang' происходит от имени датского математика Агнера Крарупа Эрланга, пионера в области теории массового обслуживания.",
      "developmentStart": "Erlang был разработан в конце 1980-х годов в Ericsson Computer Science Laboratory.",
      "firstRelease": "Первая версия Erlang была выпущена в 1986 году, а в 1998 году язык был открыт для общественности."
    },
    "code": "<rkey>-module</rkey>(hello).\n<rkey>-export</rkey>([<rfunc>start</rfunc>/0]).\n\n<rfunc>start</rfunc>() ->\n    <rkey>io</rkey>:<rfunc>format</rfunc>(<rstr>\"Hello, World!~n\"</rstr>).",
    "developmentStartYear": "1986",
    "firstVersionYear": "1986",
    "designedBy": [
      "Джо Армстронг",
      "Роберт Вирдинг",
      "Майк Уильямс"
    ],
    "developer": [
      "Ericsson",
      "Erlang Community"
    ],
    "designStyle": "Erlang спроектирован для разработки распределенных, отказоустойчивых и реального времени систем с поддержкой горячей замены кода.",
    "fileExtensions": {
      ".erl": "Основное расширение файлов исходного кода Erlang.",
      ".hrl": "Заголовочные файлы Erlang."
    },
    "paradigms": {
      "paradigms": [
        6,
        13,
        15,
        17,
        8
      ]
    },
    "typing": "Динамическая, Сильная",
    "useCases": [
      "Телекоммуникационные системы",
      "Мессенджеры (например, WhatsApp)",
      "Веб-серверы",
      "Распределенные системы",
      "Системы реального времени"
    ],
    "compatibility": [
      "Кроссплатформенный (Windows, macOS, Linux, Unix)"
    ],
    "popularFrameworks": [
      "OTP (Open Telecom Platform)",
      "Cowboy",
      "RabbitMQ",
      "MongooseIM",
      "Riak"
    ],
    "features": [
      "Легкие процессы",
      "Масштабируемость и конкурентность",
      "Отказоустойчивость",
      "Горячая замена кода",
      "Распределенные вычисления"
    ],
    "prosAndCons": {
      "pros": [
        "Высокая надежность и доступность систем",
        "Отличная поддержка конкурентности",
        "Масштабируемость",
        "Подходит для систем реального времени"
      ],
      "cons": [
        "Крутая кривая обучения",
        "Отличается от традиционных языков",
        "Меньшая экосистема и инструментарий"
      ]
    },
    "relatedLanguages": [
      "Elixir",
      "Haskell",
      "OCaml",
      "F#"
    ],
    "ideSupport": [
      "Visual Studio Code",
      "Emacs",
      "vim",
      "IntelliJ IDEA (с плагинами)"
    ],
    "community": {
      "Erlang Forums": "официальные форумы для обсуждений.",
      "StackOverflow": "ключевой ресурс для вопросов и ответов по Erlang.",
      "Reddit": "сообщество r/erlang для обсуждений и новостей.",
      "Erlang User Conference": "ежегодная конференция для разработчиков Erlang."
    },
    "future": "Erlang продолжает использоваться в областях, требующих высокой надежности и масштабируемости. С появлением Elixir интерес к виртуальной машине BEAM возрос, и экосистема продолжает развиваться."
  },
  {
    "logo": "clojure",
    "name": "Clojure",
    "url": "https://clojure.org",
    "description": "<bold>Clojure</bold> — это современный диалект языка Lisp, работающий на платформе Java Virtual Machine (JVM). Он сочетает в себе функциональное программирование с неизменяемыми структурами данных, предоставляя мощные инструменты для разработки масштабируемых систем.",
    "history": {
      "nameOrigin": "Название 'Clojure' является игрой слов, объединяющей 'closure' (замыкание) и 'clojure' (созвучно 'closure'), указывая на функциональные возможности языка.",
      "developmentStart": "Clojure был создан Ричем Хикки в 2007 году.",
      "firstRelease": "Первая версия Clojure была выпущена в 2007 году."
    },
    "code": "<rkey>(println</rkey> <rstr>\"Hello, World!\"</rstr><rkey>)</rkey>",
    "developmentStartYear": "2007",
    "firstVersionYear": "2007",
    "designedBy": [
      "Рич Хикки"
    ],
    "developer": [
      "Clojure Community"
    ],
    "designStyle": "Clojure разработан как функциональный язык с акцентом на неизменяемость и конкурентность, предоставляя простые и мощные абстракции для работы с данными.",
    "fileExtensions": {
      ".clj": "Основное расширение файлов исходного кода Clojure.",
      ".cljs": "Файлы ClojureScript для компиляции в JavaScript.",
      ".cljc": "Кроссплатформенные файлы Clojure."
    },
    "paradigms": {
      "paradigms": [
        6,
        13,
        5,
        9,
        17,
        8
      ]
    },
    "typing": "Динамическая, Сильная",
    "useCases": [
      "Веб-разработка",
      "Обработка данных",
      "Машинное обучение",
      "Многопоточные приложения",
      "Скрипты"
    ],
    "compatibility": [
      "JVM",
      "JavaScript (через ClojureScript)",
      ".NET (через ClojureCLR)"
    ],
    "popularFrameworks": [
      "Ring",
      "Compojure",
      "Luminus",
      "Re-frame",
      "Pedestal"
    ],
    "features": [
      "Неизменяемые структуры данных",
      "Легковесные потоки",
      "Макросы и метапрограммирование",
      "Интеграция с Java",
      "Лаконичный синтаксис"
    ],
    "prosAndCons": {
      "pros": [
        "Мощные возможности для конкурентности",
        "Высокая продуктивность разработчика",
        "Интеграция с экосистемой Java",
        "Активное сообщество"
      ],
      "cons": [
        "Необычный синтаксис для новичков",
        "Крутая кривая обучения",
        "Меньшая распространенность в индустрии"
      ]
    },
    "relatedLanguages": [
      "Lisp",
      "Scheme",
      "Haskell",
      "Elixir"
    ],
    "ideSupport": [
      "Cursive (IntelliJ IDEA)",
      "Emacs (с CIDER)",
      "Visual Studio Code (с Calva)",
      "vim"
    ],
    "community": {
      "Clojure Mailing List": "официальные списки рассылки для обсуждений.",
      "StackOverflow": "ключевой ресурс для вопросов и ответов по Clojure.",
      "Reddit": "сообщество r/Clojure для обсуждений и новостей.",
      "Clojure/conj": "ежегодная конференция для разработчиков Clojure."
    },
    "future": "Clojure продолжает развиваться и используется в различных проектах, особенно в областях, требующих обработки больших данных и параллелизма. С поддержкой со стороны активного сообщества язык остается актуальным выбором для многих разработчиков."
  },
  {
    "logo": "assembly",
    "name": "Assembly",
    "url": "",
    "description": "<bold>Assembly</bold> — это низкоуровневый язык программирования, который напрямую взаимодействует с архитектурой компьютера. Он позволяет программистам писать программы с точным контролем над аппаратными ресурсами, такими как процессор и память.",
    "history": {
      "nameOrigin": "Название 'Assembly' происходит от 'assembler' — программы, которая переводит код на языке ассемблера в машинный код.",
      "developmentStart": "Языки ассемблера появились вместе с первыми компьютерами в 1940-х и 1950-х годах.",
      "firstRelease": "Нет конкретной даты первого выпуска, так как языки ассемблера разрабатывались для различных архитектур процессоров по мере их появления."
    },
    "code": "; Пример для архитектуры x86\n<rkey>section</rkey> .text\n<rkey>global</rkey> _start\n\n_start:\n    <rkey>mov</rkey> edx, <rfunc>len</rfunc>\n    <rkey>mov</rkey> ecx, <rfunc>msg</rfunc>\n    <rkey>mov</rkey> ebx, 1\n    <rkey>mov</rkey> eax, 4\n    <rkey>int</rkey> 0x80\n    <rkey>mov</rkey> eax, 1\n    <rkey>int</rkey> 0x80\n\n<rkey>section</rkey> .data\nmsg db <rstr>'Hello, World!',0xA</rstr>\nlen equ $ - msg",
    "developmentStartYear": "1949",
    "firstVersionYear": "1950",
    "designedBy": [
      "Различные разработчики для разных архитектур"
    ],
    "developer": [
      "Зависит от архитектуры"
    ],
    "designStyle": "Assembly предоставляет мнемонические коды для операций машинного языка, позволяя программистам писать код, который напрямую управляет аппаратурой.",
    "fileExtensions": {
      ".asm": "Основное расширение файлов исходного кода Assembly.",
      ".s": "Альтернативное расширение для файлов Assembly."
    },
    "paradigms": {
      "paradigms": [
        1,
        11,
        9,
        16
      ]
    },
    "typing": "Нет (работает на уровне машинных инструкций)",
    "useCases": [
      "Драйверы устройств",
      "Встроенные системы",
      "Высокопроизводительные приложения",
      "Системное программирование",
      "Оптимизация критически важных участков кода"
    ],
    "compatibility": [
      "Зависит от архитектуры процессора (x86, ARM, MIPS и т.д.)"
    ],
    "popularFrameworks": [
      "NASM",
      "MASM",
      "GAS",
      "FASM",
      "TASM"
    ],
    "features": [
      "Полный контроль над аппаратурой",
      "Высокая производительность",
      "Мнемонические инструкции",
      "Отсутствие абстракций высокого уровня",
      "Прямая работа с регистрами и памятью"
    ],
    "prosAndCons": {
      "pros": [
        "Максимальная производительность",
        "Точный контроль над аппаратурой",
        "Незаменим для низкоуровневого программирования"
      ],
      "cons": [
        "Сложность разработки и отладки",
        "Низкая портируемость",
        "Большой объем кода для простых задач",
        "Требует глубокого понимания архитектуры"
      ]
    },
    "relatedLanguages": [
      "C",
      "C++",
      "Rust",
      "Fortran"
    ],
    "ideSupport": [
      "Visual Studio",
      "vim",
      "Emacs",
      "NASM IDEs",
      "RadASM"
    ],
    "community": {
      "StackOverflow": "ключевой ресурс для вопросов и ответов по Assembly.",
      "Reddit": "сообщество r/Assembly для обсуждений и новостей.",
      "Flat Assembler Community": "форумы для разработчиков на Assembly."
    },
    "future": "Хотя Assembly не используется для разработки приложений высокого уровня, он остается важным для системного и встроенного программирования, где требуется максимальная производительность и контроль над аппаратурой."
  },
  {
    "logo": "webassembly",
    "name": "WebAssembly",
    "url": "https://webassembly.org",
    "description": "<bold>WebAssembly</bold> — это низкоуровневый бинарный формат инструкций для стековой виртуальной машины, предназначенный для выполнения кода на веб-страницах с близкой к нативной скоростью. WebAssembly позволяет запускать код на различных языках в браузере, предоставляя новые возможности для веб-приложений.",
    "history": {
      "nameOrigin": "Название 'WebAssembly' отражает идею ассемблера для веба, позволяя выполнять код на низком уровне в браузере.",
      "developmentStart": "Разработка WebAssembly началась в 2015 году как совместный проект компаний Mozilla, Microsoft, Google и Apple.",
      "firstRelease": "Первая версия WebAssembly (MVP) была выпущена в 2017 году."
    },
    "code": "<rkey>// WebAssembly код обычно пишется на языках высокого уровня и компилируется в WASM.</rkey>\n<rkey>;; Пример модуля в текстовом формате WAT</rkey>\n<rkey>(module</rkey>\n  <rkey>(func</rkey> <rfunc>$hello</rfunc> <rkey>(export</rkey> <rstr>\"hello\"</rstr>))\n<rkey>)</rkey>",
    "developmentStartYear": "2015",
    "firstVersionYear": "2017",
    "designedBy": [
      "World Wide Web Consortium (W3C)"
    ],
    "developer": [
      "W3C",
      "Сообщество WebAssembly"
    ],
    "designStyle": "WebAssembly разработан как переносимый формат байт-кода для выполнения в браузере с высокой производительностью, обеспечивая безопасность и возможность компиляции из различных языков.",
    "fileExtensions": {
      ".wasm": "Бинарный формат WebAssembly.",
      ".wat": "Текстовый формат WebAssembly для чтения человеком."
    },
    "paradigms": {
      "paradigms": [
        1,
        11,
        9,
        16,
        3
      ]
    },
    "typing": "Статическая, Сильная",
    "useCases": [
      "Высокопроизводительные веб-приложения",
      "Игры в браузере",
      "Мультимедийные приложения",
      "Машинное обучение в браузере",
      "Перенос существующего кода в веб"
    ],
    "compatibility": [
      "Современные веб-браузеры",
      "Серверные среды (Node.js)",
      "Встраиваемые устройства"
    ],
    "popularFrameworks": [
      "Emscripten",
      "Blazor",
      "AssemblyScript",
      "Rust WASM",
      "wasm-pack"
    ],
    "features": [
      "Высокая производительность",
      "Портируемость",
      "Безопасность исполнения",
      "Поддержка различных языков",
      "Интеграция с JavaScript"
    ],
    "prosAndCons": {
      "pros": [
        "Близкая к нативной производительность в браузере",
        "Позволяет использовать различные языки для веб-разработки",
        "Безопасное исполнение кода",
        "Широкая поддержка в браузерах"
      ],
      "cons": [
        "Сложность отладки",
        "Ограниченный доступ к DOM (требуется взаимодействие с JavaScript)",
        "Молодая экосистема",
        "Не все языки полностью поддерживают компиляцию в WASM"
      ]
    },
    "relatedLanguages": [
      "Assembly",
      "JavaScript",
      "Rust",
      "C++"
    ],
    "ideSupport": [
      "Visual Studio Code",
      "IntelliJ IDEA",
      "Eclipse",
      "Visual Studio"
    ],
    "community": {
      "WebAssembly Community Group": "официальное сообщество для обсуждений и разработки.",
      "StackOverflow": "ключевой ресурс для вопросов и ответов по WebAssembly.",
      "Reddit": "сообщество r/WebAssembly для обсуждений и новостей."
    },
    "future": "WebAssembly продолжает развиваться, расширяя возможности веб-приложений. С добавлением новых функций, таких как многопоточность и доступ к системным ресурсам, ожидается рост использования WASM в различных областях."
  },
  {
    "logo": "lua",
    "name": "Lua",
    "url": "https://www.lua.org",
    "description": "<bold>Lua</bold> — это легкий, встраиваемый скриптовый язык программирования с простой процедурной и мощной метатабличной моделью. Он широко используется в играх, встроенных системах и приложениях, требующих расширяемости.",
    "history": {
      "nameOrigin": "Слово 'Lua' означает 'луна' на португальском языке, отражая бразильское происхождение языка.",
      "developmentStart": "Lua был разработан в 1993 году в Техническом университете Рио-де-Жанейро в Бразилии.",
      "firstRelease": "Первая версия Lua 1.0 была выпущена в июле 1994 года."
    },
    "code": "<rkey>print</rkey>(<rstr>'Hello, World!'</rstr>)",
    "developmentStartYear": "1993",
    "firstVersionYear": "1994",
    "designedBy": [
      "Roberto Ierusalimschy",
      "Luiz Henrique de Figueiredo",
      "Waldemar Celes"
    ],
    "developer": [
      "PUC-Rio"
    ],
    "designStyle": "Lua разработан как простой и эффективный язык с минимальным набором функций, обеспечивая легкость встраивания и расширения через C API.",
    "fileExtensions": {
      ".lua": "Основное расширение файлов исходного кода Lua."
    },
    "paradigms": {
      "paradigms": [
        13,
        9,
        16,
        6,
        17,
        18,
        8
      ]
    },
    "typing": "Динамическая, Слабая",
    "useCases": [
      "Игровые движки (например, в World of Warcraft, Roblox)",
      "Встроенные системы",
      "Скрипты и автоматизация",
      "Конфигурационные файлы",
      "Web-приложения (OpenResty)"
    ],
    "compatibility": [
      "Кроссплатформенный (Windows, macOS, Linux, Unix, мобильные платформы)"
    ],
    "popularFrameworks": [
      "LÖVE",
      "Corona SDK",
      "Torch",
      "OpenResty",
      "Neovim"
    ],
    "features": [
      "Легкость и компактность",
      "Простота встраивания",
      "Мощная метатабличная модель",
      "Гарбедж-коллектор",
      "Поддержка процедурного и функционального стилей"
    ],
    "prosAndCons": {
      "pros": [
        "Быстрый и эффективный",
        "Простой синтаксис",
        "Легко встраивается в C/C++ приложения",
        "Малый размер интерпретатора"
      ],
      "cons": [
        "Ограниченная стандартная библиотека",
        "Меньшая распространенность по сравнению с другими скриптовыми языками",
        "Отсутствие встроенной поддержки ООП (но можно реализовать через метатаблицы)"
      ]
    },
    "relatedLanguages": [
      "Python",
      "Ruby",
      "JavaScript",
      "Scheme"
    ],
    "ideSupport": [
      "Visual Studio Code",
      "ZeroBrane Studio",
      "IntelliJ IDEA (с плагинами)",
      "Sublime Text",
      "vim"
    ],
    "community": {
      "Lua Mailing Lists": "официальные списки рассылки для обсуждений.",
      "StackOverflow": "ключевой ресурс для вопросов и ответов по Lua.",
      "Reddit": "сообщество r/lua для обсуждений и новостей."
    },
    "future": "Lua продолжает использоваться в играх, встроенных системах и приложениях, требующих расширяемости. Язык развивается медленно, но стабильно, сохраняя свою простоту и эффективность."
  },
  {
    "logo": "sml",
    "name": "Standard ML",
    "url": "https://smlfamily.github.io",
    "description": "<bold>Standard ML</bold> — это функциональный язык программирования с сильной статической типизацией и выводом типов. Он используется в академических кругах и для разработки компиляторов и других инструментов, требующих строгой формальной проверки.",
    "history": {
      "nameOrigin": "Название 'Standard ML' отражает цель создать стандартную версию языка ML (Meta Language), используемого в доказательствах теорем.",
      "developmentStart": "Standard ML был разработан в 1980-х годах группой исследователей для стандартизации различных диалектов ML.",
      "firstRelease": "Стандарт языка был опубликован в 1990 году."
    },
    "code": "<rkey>fun</rkey> <rfunc>main</rfunc>() = <rkey>print</rkey> (<rstr>\"Hello, World!\\n\"</rstr>);\n\n<rfunc>main</rfunc>();",
    "developmentStartYear": "1983",
    "firstVersionYear": "1990",
    "designedBy": [
      "Robin Milner",
      "Mads Tofte",
      "Robert Harper"
    ],
    "developer": [
      "Сообщество SML"
    ],
    "designStyle": "Standard ML сочетает функциональное программирование с мощной системой модулей и строгой статической типизацией, обеспечивая высокую надежность программ.",
    "fileExtensions": {
      ".sml": "Основное расширение файлов исходного кода Standard ML.",
      ".sig": "Файлы сигнатур модулей."
    },
    "paradigms": {
      "paradigms": [
        6,
        9,
        13,
        7,
        8
      ]
    },
    "typing": "Статическая, Сильная, Вывод типов",
    "useCases": [
      "Компиляторы и интерпретаторы",
      "Академические исследования",
      "Формальные верификации",
      "Разработка языков программирования"
    ],
    "compatibility": [
      "Windows",
      "macOS",
      "Linux",
      "Unix"
    ],
    "popularFrameworks": [
      "MLton",
      "SML/NJ",
      "CakeML",
      "HOL"
    ],
    "features": [
      "Мощная система типов",
      "Вывод типов",
      "Модули и функторы",
      "Функциональное программирование",
      "Паттерн-матчинг"
    ],
    "prosAndCons": {
      "pros": [
        "Высокая надежность кода",
        "Мощные абстракции",
        "Эффективные реализации",
        "Ясная семантика"
      ],
      "cons": [
        "Ограниченная экосистема библиотек",
        "Меньшая популярность в индустрии",
        "Крутая кривая обучения"
      ]
    },
    "relatedLanguages": [
      "OCaml",
      "Haskell",
      "F#",
      "Reason"
    ],
    "ideSupport": [
      "Emacs",
      "vim",
      "Visual Studio Code",
      "SML Mode"
    ],
    "community": {
      "SML Family GitHub": "официальные ресурсы и обсуждения.",
      "StackOverflow": "ключевой ресурс для вопросов и ответов по SML.",
      "Reddit": "сообщество r/sml для обсуждений и новостей."
    },
    "future": "Standard ML продолжает использоваться в академических кругах и для специфических задач, требующих надежности и строгой типизации. Развитие языка продолжается, хотя его популярность ограничена."
  },
  {
    "logo": "pascal",
    "name": "Pascal",
    "url": "https://www.freepascal.org",
    "description": "<bold>Pascal</bold> — это императивный и процедурный язык программирования, разработанный для обучения структурному программированию и разработке надежных программ. Он используется в образовании и для разработки приложений, требующих высокой надежности.",
    "history": {
      "nameOrigin": "Язык назван в честь французского математика и философа Блеза Паскаля.",
      "developmentStart": "Pascal был разработан в конце 1960-х годов Никлаусом Виртом.",
      "firstRelease": "Первая версия Pascal была выпущена в 1970 году."
    },
    "code": "<rkey>program</rkey> <rfunc>HelloWorld</rfunc>;\n<rkey>begin</rkey>\n  <rfunc>WriteLn</rfunc>(<rstr>'Hello, World!'</rstr>);\n<rkey>end</rkey>.",
    "developmentStartYear": "1968",
    "firstVersionYear": "1970",
    "designedBy": [
      "Никлаус Вирт"
    ],
    "developer": [
      "Сообщество Pascal",
      "Free Pascal Team"
    ],
    "designStyle": "Pascal разработан для поддержки структурного программирования и данных, обеспечивая ясный синтаксис и строгую типизацию.",
    "fileExtensions": {
      ".pas": "Основное расширение файлов исходного кода Pascal.",
      ".pp": "Расширение для Free Pascal."
    },
    "paradigms": {
      "paradigms": [
        9,
        16,
        2,
        13,
        8
      ]
    },
    "typing": "Статическая, Сильная",
    "useCases": [
      "Образование",
      "Разработка компиляторов",
      "Системное программирование",
      "Разработка приложений под Windows (Delphi)"
    ],
    "compatibility": [
      "Windows",
      "macOS",
      "Linux",
      "Unix",
      "Встроенные системы"
    ],
    "popularFrameworks": [
      "Free Pascal",
      "Lazarus",
      "Delphi",
      "Turbo Pascal"
    ],
    "features": [
      "Структурное программирование",
      "Строгая типизация",
      "Простой и понятный синтаксис",
      "Поддержка указателей",
      "Модули"
    ],
    "prosAndCons": {
      "pros": [
        "Легкость изучения",
        "Высокая надежность кода",
        "Подходит для обучения программированию",
        "Компилируется в эффективный машинный код"
      ],
      "cons": [
        "Ограниченная экосистема",
        "Меньшая популярность в современной разработке",
        "Ограниченные возможности для современных приложений"
      ]
    },
    "relatedLanguages": [
      "Delphi",
      "Modula-2",
      "Ada",
      "C"
    ],
    "ideSupport": [
      "Lazarus",
      "Delphi IDE",
      "Free Pascal IDE",
      "Visual Studio Code (с расширениями)"
    ],
    "community": {
      "Free Pascal Forums": "официальные форумы для обсуждений.",
      "StackOverflow": "ключевой ресурс для вопросов и ответов по Pascal.",
      "Reddit": "сообщество r/pascal для обсуждений и новостей."
    },
    "future": "Pascal продолжает использоваться в образовании и для поддержки существующих приложений. Разработка Free Pascal и Lazarus обеспечивает современную среду для разработки на Pascal."
  },
  {
    "logo": "reason",
    "name": "Reason",
    "url": "https://reasonml.github.io",
    "description": "<bold>Reason</bold> (ReasonML) — это синтаксический сахар поверх OCaml, разработанный для создания удобного и знакомого синтаксиса для JavaScript-разработчиков. Он компилируется в JavaScript через BuckleScript или в нативный код через компилятор OCaml.",
    "history": {
      "nameOrigin": "Название 'Reason' отражает идею рационального подхода к программированию с использованием мощной системы типов OCaml.",
      "developmentStart": "Reason был разработан в 2016 году Джорданом Уокером в Facebook.",
      "firstRelease": "Первая версия Reason была выпущена в 2016 году."
    },
    "code": "<rkey>let</rkey> <rfunc>greet</rfunc> = name => <rfunc>print_endline</rfunc>(<rstr>\"Hello, \"</rstr> ++ name);\n\n<rfunc>greet</rfunc>(<rstr>\"World\"</rstr>);",
    "developmentStartYear": "2016",
    "firstVersionYear": "2016",
    "designedBy": [
      "Джордан Уокер",
      "Facebook"
    ],
    "developer": [
      "Facebook",
      "Сообщество Reason"
    ],
    "designStyle": "Reason предоставляет знакомый синтаксис для JavaScript-разработчиков, сохраняя мощь и эффективность OCaml, включая систему типов и производительность.",
    "fileExtensions": {
      ".re": "Основное расширение файлов исходного кода Reason.",
      ".rei": "Файлы интерфейсов Reason."
    },
    "paradigms": {
      "paradigms": [
        6,
        14,
        13,
        7,
        9,
        8
      ]
    },
    "typing": "Статическая, Сильная, Вывод типов",
    "useCases": [
      "Веб-разработка (фронтенд и бэкенд)",
      "Мобильные приложения",
      "Системное программирование",
      "Инструменты и утилиты"
    ],
    "compatibility": [
      "JavaScript (через BuckleScript)",
      "Native (через компилятор OCaml)"
    ],
    "popularFrameworks": [
      "ReasonReact",
      "Revery",
      "BuckleScript",
      "ReScript"
    ],
    "features": [
      "Мощная система типов",
      "Вывод типов",
      "Высокая производительность",
      "Интероперабельность с JavaScript",
      "Современный синтаксис"
    ],
    "prosAndCons": {
      "pros": [
        "Улучшенная надежность кода",
        "Высокая производительность",
        "Интеграция с экосистемой JavaScript",
        "Активная поддержка со стороны Facebook"
      ],
      "cons": [
        "Крутая кривая обучения",
        "Меньшая экосистема по сравнению с JavaScript",
        "Некоторая сложность в настройке инструментов"
      ]
    },
    "relatedLanguages": [
      "OCaml",
      "TypeScript",
      "JavaScript",
      "Elm"
    ],
    "ideSupport": [
      "Visual Studio Code",
      "Atom",
      "vim",
      "Emacs"
    ],
    "community": {
      "ReasonML Forum": "официальный форум для обсуждения языка.",
      "StackOverflow": "ключевой ресурс для вопросов и ответов по Reason.",
      "Reddit": "сообщество r/reasonml для обсуждений и новостей."
    },
    "future": "Разработка Reason продолжается, хотя фокус сообщества сместился в сторону ReScript, который эволюционировал из BuckleScript. Тем не менее, Reason остается инструментом для тех, кто хочет использовать синтаксис, близкий к JavaScript, с мощью OCaml."
  },
  {
    "logo": "lisp",
    "name": "Lisp",
    "url": "https://lisp-lang.org",
    "description": "<bold>Lisp</bold> — это семейство языков программирования, известных своим уникальным синтаксисом на основе списков и мощными возможностями метапрограммирования. Lisp является одним из самых старых высокоуровневых языков программирования и оказал значительное влияние на развитие компьютерных наук.",
    "history": {
      "nameOrigin": "Название 'Lisp' происходит от 'LISt Processing' (обработка списков), отражая основную структуру данных языка.",
      "developmentStart": "Lisp был разработан в конце 1950-х годов Джоном Маккарти в MIT.",
      "firstRelease": "Первая версия Lisp была описана в статье Маккарти в 1958 году."
    },
    "code": "<rkey>(defun</rkey> <rfunc>hello-world</rfunc> ()\n  <rkey>(print</rkey> <rstr>\"Hello, World!\"</rstr><rkey>)</rkey><rkey>)</rkey>\n\n<rkey>(hello-world)</rkey>",
    "developmentStartYear": "1958",
    "firstVersionYear": "1958",
    "designedBy": [
      "Джон Маккарти"
    ],
    "developer": [
      "Сообщество Lisp"
    ],
    "designStyle": "Lisp основан на простых, но мощных принципах, используя списки как основную структуру данных и предоставляя возможности для метапрограммирования через макросы.",
    "fileExtensions": {
      ".lisp": "Основное расширение файлов исходного кода Lisp.",
      ".lsp": "Альтернативное расширение для файлов Lisp."
    },
    "paradigms": {
      "paradigms": [
        6,
        13,
        5,
        9,
        17,
        8
      ]
    },
    "typing": "Динамическая, Сильная",
    "useCases": [
      "Искусственный интеллект",
      "Исследования",
      "Математические приложения",
      "Скрипты и автоматизация",
      "Разработка языков программирования"
    ],
    "compatibility": [
      "Кроссплатформенный (зависит от реализации)"
    ],
    "popularFrameworks": [
      "Common Lisp",
      "Emacs Lisp",
      "AutoLISP",
      "Clojure",
      "Scheme"
    ],
    "features": [
      "Макросы и метапрограммирование",
      "Символические вычисления",
      "Легковесный синтаксис",
      "Интерактивная оболочка",
      "Динамическая типизация"
    ],
    "prosAndCons": {
      "pros": [
        "Мощные возможности для метапрограммирования",
        "Высокая продуктивность в определенных задачах",
        "Гибкость и расширяемость",
        "Долгая история и зрелость"
      ],
      "cons": [
        "Необычный синтаксис для многих разработчиков",
        "Меньшая популярность в современной индустрии",
        "Крутая кривая обучения"
      ]
    },
    "relatedLanguages": [
      "Scheme",
      "Clojure",
      "Elixir",
      "Haskell"
    ],
    "ideSupport": [
      "Emacs",
      "vim",
      "SLIME",
      "Atom"
    ],
    "community": {
      "Lisp Forum": "официальные форумы для обсуждений.",
      "StackOverflow": "ключевой ресурс для вопросов и ответов по Lisp.",
      "Reddit": "сообщество r/lisp для обсуждений и новостей."
    },
    "future": "Lisp продолжает использоваться в специфических областях и остается влиятельным в мире программирования. Его идеи и концепции продолжают влиять на разработку новых языков и технологий."
  },
  {
    "logo": "scheme",
    "name": "Scheme",
    "url": "https://www.scheme.org/",
    "description": "<bold>Scheme</bold> — это диалект языка Lisp, созданный для изучения семантики программирования и разработки компактных и элегантных программ. Scheme известен своей минималистичной и мощной конструкцией, поддерживая как функциональное, так и императивное программирование.",
    "history": {
      "nameOrigin": "Название 'Scheme' выбрано как игра слов с названием 'Schemas', отражая его предназначение для исследований в области программирования.",
      "developmentStart": "Scheme был разработан в середине 1970-х годов Гаем Стилом и Джеральдом Сассманом в MIT.",
      "firstRelease": "Первая версия Scheme была представлена в 1975 году."
    },
    "code": "<rkey>(define</rkey> (<rfunc>hello-world</rfunc>)\n  <rkey>(display</rkey> <rstr>\"Hello, World!\"</rstr>)\n  <rkey>(newline)</rkey><rkey>)</rkey>\n\n<rkey>(hello-world)</rkey>",
    "developmentStartYear": "1975",
    "firstVersionYear": "1975",
    "designedBy": [
      "Гай Стил",
      "Джеральд Сассман"
    ],
    "developer": [
      "Сообщество Scheme"
    ],
    "designStyle": "Scheme спроектирован как минималистичный диалект Lisp с чистой семантикой и поддержкой замыканий, позволяя исследовать новые концепции в программировании.",
    "fileExtensions": {
      ".scm": "Основное расширение файлов исходного кода Scheme.",
      ".ss": "Альтернативное расширение для файлов Scheme."
    },
    "paradigms": {
      "paradigms": [
        6,
        13,
        5,
        9,
        17,
        8
      ]
    },
    "typing": "Динамическая, Сильная",
    "useCases": [
      "Образование",
      "Исследования в области программирования",
      "Скрипты и автоматизация",
      "Математические вычисления",
      "Прототипирование"
    ],
    "compatibility": [
      "Кроссплатформенный (зависит от реализации)"
    ],
    "popularFrameworks": [
      "Racket",
      "Guile",
      "Chicken Scheme",
      "MIT Scheme",
      "Gambit"
    ],
    "features": [
      "Минимализм и простота",
      "Замыкания и продолжения",
      "Макросы",
      "Легкий синтаксис",
      "Функциональное программирование"
    ],
    "prosAndCons": {
      "pros": [
        "Ясная и чистая семантика",
        "Мощные абстракции",
        "Подходит для обучения и исследований",
        "Гибкость и расширяемость"
      ],
      "cons": [
        "Меньшая популярность в промышленной разработке",
        "Ограниченная экосистема библиотек",
        "Необычный синтаксис для многих разработчиков"
      ]
    },
    "relatedLanguages": [
      "Lisp",
      "Clojure",
      "Racket",
      "Common Lisp"
    ],
    "ideSupport": [
      "DrRacket",
      "Emacs",
      "vim",
      "Atom"
    ],
    "community": {
      "Scheme Mailing Lists": "официальные списки рассылки для обсуждений.",
      "StackOverflow": "ключевой ресурс для вопросов и ответов по Scheme.",
      "Reddit": "сообщество r/scheme для обсуждений и новостей."
    },
    "future": "Scheme продолжает использоваться в образовании и исследованиях, оставаясь инструментом для изучения новых концепций в программировании. Развитие языка продолжается через различные реализации и сообщества."
  }


]